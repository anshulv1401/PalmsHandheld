//// Warning: Do not modify!
//// This file (PartEntity.cs) has been auto-generated by PALMS Entity Generation Tool on 'Monday, June 25, 2018' at '7:45:48 AM'
//// If modification is required, consider 'partial class'.

using System;
using System.Collections;
using System.Collections.Generic;
using Technoforte.PALMS.Entities.Views.PrimaryKeys;
using Technoforte.PALMS.Entities.Views.UniqueKeys;

#pragma warning disable 1591

namespace Technoforte.PALMS.Entities.Views
{
	[Serializable]
	public partial class PartEntity : Entity
	{
		#region Enums

		public new enum Field
		{
			PrimaryCompanyID
			, PartID
			, PartName
			, PartCode
			, StorageUOMID
			, AdditionalStorageUOMID
			, DefaultPurchaseUOMID
			, DefaultPurchaseBillingUOMID
			, DefaultSalesUOMID
			, DefaultSalesBillingUOMID
			, LatestCountryOfOriginID
			, Length
			, Height
			, Width
			, GrossWeight
			, GrossVolume
			, LocationRestrictionID
			, IsKit
			, IsPartRestrictedToSalesOrder
			, HSCode
			, ExportHSCode
			, PartTypeID
			, PackingGroupID
			, IsExpirySensitive
			, IsSerialNumberTracked
			, MinimumFreeShelfLife
			, ShelfLifeUnit
			, TPLBillingPartTariffID
			, PerTripMaximumQuantityInStorageUOM
			, BasePartID
			, MultiplicationFactor
			, TotalShelfLife
			, TotalShelfLifeUnit
			, IsTrackedByManufactureDate
			, ExternalPartReference
			, IsBarcodeLabelPrintRequired
			, PartCategoryID
			, OriginType
			, IsUnderCycleCount
			, IsComponentPart
			, PreferredMinimumAllocationQuantity
			, PreferredMinimumPutawayQuantity
			, IsBatchSensitive
			, NetWeight
			, InComplexityID
			, OutComplexityID
			, MHETypeID
			, NoOfComponents
			, IsWeightRequired
			, SerialNoValidationRule
			, LatestCountryOfOriginID_CountryCode
			, LatestCountryOfOriginID_CountryName
			, LocationRestrictionID_LocationRestrictionCode
			, LocationRestrictionID_LocationRestrictionName
			, MHETypeID_MHETypeCode
			, MHETypeID_MHETypeName
			, MHETypeID_MHETypeID
			, InComplexityID_OperationComplexityCode
			, InComplexityID_OperationComplexityID
			, InComplexityID_OperationComplexityName
			, InComplexityID_OperationTypeID
			, OutComplexityID_OperationComplexityCode
			, OutComplexityID_OperationComplexityID
			, OutComplexityID_OperationComplexityName
			, OutComplexityID_OperationTypeID
			, PackingGroupID_PackingGroupCode
			, PackingGroupID_PackingGroupName
			, CreatedBy_PalmsUserLoginName
			, ModifiedBy_PalmsUserLoginName
			, BasePartID_PartCode
			, PartCategoryID_PartCategoryCode
			, PartCategoryID_PartCategoryName
			, PartTypeID_PartTypeCode
			, PartTypeID_PartTypeName
			, PrimaryCompanyID_DocumentNoPrefix
			, PrimaryCompanyID_PrimaryCompanyCode
			, PrimaryCompanyID_PrimaryCompanyName
			, TPLBillingPartTariffID_TPLBillingPartTariffCode
			, TPLBillingPartTariffID_TPLBillingPartTariffName
			, AdditionalStorageUOMID_UOMCode
			, AdditionalStorageUOMID_UOMName
			, DefaultSalesBillingUOMID_UOMCode
			, DefaultSalesBillingUOMID_UOMName
			, DefaultPurchaseUOMID_UOMCode
			, DefaultPurchaseUOMID_UOMName
			, DefaultPurchaseBillingUOMID_UOMCode
			, DefaultPurchaseBillingUOMID_UOMName
			, DefaultSalesUOMID_UOMCode
			, DefaultSalesUOMID_UOMName
			, StorageUOMID_UOMCode
			, StorageUOMID_UOMName
			
			, _FieldCount
		}

		public enum UniqueKey
		{
			Code
		}

		#endregion Enums

		#region Members

		public int? primaryCompanyID;
		public int? partID;
		public string partName;
		public string partCode;
		public int? storageUOMID;
		public int? additionalStorageUOMID;
		public int? defaultPurchaseUOMID;
		public int? defaultPurchaseBillingUOMID;
		public int? defaultSalesUOMID;
		public int? defaultSalesBillingUOMID;
		public int? latestCountryOfOriginID;
		public decimal? length;
		public decimal? height;
		public decimal? width;
		public decimal? grossWeight;
		public decimal? grossVolume;
		public int? locationRestrictionID;
		public bool? isKit;
		public bool? isPartRestrictedToSalesOrder;
		public string hSCode;
		public string exportHSCode;
		public int? partTypeID;
		public int? packingGroupID;
		public bool? isExpirySensitive;
		public bool? isSerialNumberTracked;
		public int? minimumFreeShelfLife;
		public int? shelfLifeUnit;
		public int? tPLBillingPartTariffID;
		public decimal? perTripMaximumQuantityInStorageUOM;
		public int? basePartID;
		public decimal? multiplicationFactor;
		public int? totalShelfLife;
		public int? totalShelfLifeUnit;
		public bool? isTrackedByManufactureDate;
		public string externalPartReference;
		public bool? isBarcodeLabelPrintRequired;
		public int? partCategoryID;
		public string originType;
		public bool? isUnderCycleCount;
		public bool? isComponentPart;
		public decimal? preferredMinimumAllocationQuantity;
		public decimal? preferredMinimumPutawayQuantity;
		public bool? isBatchSensitive;
		public decimal? netWeight;
		public int? inComplexityID;
		public int? outComplexityID;
		public int? mHETypeID;
		public int? noOfComponents;
		public bool? isWeightRequired;
		public int? serialNoValidationRule;
		public string latestCountryOfOriginID_CountryCode;
		public string latestCountryOfOriginID_CountryName;
		public string locationRestrictionID_LocationRestrictionCode;
		public string locationRestrictionID_LocationRestrictionName;
		public string mHETypeID_MHETypeCode;
		public string mHETypeID_MHETypeName;
		public int? mHETypeID_MHETypeID;
		public string inComplexityID_OperationComplexityCode;
		public int? inComplexityID_OperationComplexityID;
		public string inComplexityID_OperationComplexityName;
		public int? inComplexityID_OperationTypeID;
		public string outComplexityID_OperationComplexityCode;
		public int? outComplexityID_OperationComplexityID;
		public string outComplexityID_OperationComplexityName;
		public int? outComplexityID_OperationTypeID;
		public string packingGroupID_PackingGroupCode;
		public string packingGroupID_PackingGroupName;
		public string createdBy_PalmsUserLoginName;
		public string modifiedBy_PalmsUserLoginName;
		public string basePartID_PartCode;
		public string partCategoryID_PartCategoryCode;
		public string partCategoryID_PartCategoryName;
		public string partTypeID_PartTypeCode;
		public string partTypeID_PartTypeName;
		public string primaryCompanyID_DocumentNoPrefix;
		public string primaryCompanyID_PrimaryCompanyCode;
		public string primaryCompanyID_PrimaryCompanyName;
		public string tPLBillingPartTariffID_TPLBillingPartTariffCode;
		public string tPLBillingPartTariffID_TPLBillingPartTariffName;
		public string additionalStorageUOMID_UOMCode;
		public string additionalStorageUOMID_UOMName;
		public string defaultSalesBillingUOMID_UOMCode;
		public string defaultSalesBillingUOMID_UOMName;
		public string defaultPurchaseUOMID_UOMCode;
		public string defaultPurchaseUOMID_UOMName;
		public string defaultPurchaseBillingUOMID_UOMCode;
		public string defaultPurchaseBillingUOMID_UOMName;
		public string defaultSalesUOMID_UOMCode;
		public string defaultSalesUOMID_UOMName;
		public string storageUOMID_UOMCode;
		public string storageUOMID_UOMName;

		#endregion Members

		#region Overriding / Public Members

		public override IEntityKey<Entity> GetPrimaryKey()
		{
			return (IEntityKey<Entity>)new PartPrimaryKey()
			{
				partID = (int)partID
				, primaryCompanyID = (int)primaryCompanyID
			};
		}

		public override IEntityKey<Entity> GetBlankPrimaryKey()
		{
			return (IEntityKey<Entity>)new PartPrimaryKey();
		}

		public override IEntityKey<Entity> GetUniqueKey(string uniqueKey)
		{
			if (uniqueKey == "")
			{
				uniqueKey = "Code";
			}

			return (IEntityKey<Entity>)GetUniqueKey((UniqueKey)Enum.Parse(typeof(UniqueKey), uniqueKey, false));
		}

		public EntityKey<PartEntity> GetUniqueKey(UniqueKey uniqueKey)
		{
			switch (uniqueKey)
			{
				case UniqueKey.Code:
					return new PartUniqueKey_Code()
					{
						partCode = (string)partCode
						, primaryCompanyID = (int?)primaryCompanyID
					};
			}

			return null;
		}

		public override IEntityKey<Entity> GetBlankUniqueKey(string uniqueKey)
		{
			if (uniqueKey == "")
			{
				uniqueKey = "Code";
			}

			return (IEntityKey<Entity>)GetBlankUniqueKey((UniqueKey)Enum.Parse(typeof(UniqueKey), uniqueKey, false));
		}

		public EntityKey<PartEntity> GetBlankUniqueKey(UniqueKey uniqueKey)
		{
			switch (uniqueKey)
			{
				case UniqueKey.Code:
					return new PartUniqueKey_Code();
			}

			return null;
		}

		public override int GetFieldCount()
		{
			return (int)Field._FieldCount;
		}

		public override object GetValue(int field)
		{
			return GetValue((Field)field);
		}

		public object GetValue(Field field)
		{
			switch (field)
			{
				case Field.PrimaryCompanyID:
					return primaryCompanyID;
				case Field.PartID:
					return partID;
				case Field.PartName:
					return partName;
				case Field.PartCode:
					return partCode;
				case Field.StorageUOMID:
					return storageUOMID;
				case Field.AdditionalStorageUOMID:
					return additionalStorageUOMID;
				case Field.DefaultPurchaseUOMID:
					return defaultPurchaseUOMID;
				case Field.DefaultPurchaseBillingUOMID:
					return defaultPurchaseBillingUOMID;
				case Field.DefaultSalesUOMID:
					return defaultSalesUOMID;
				case Field.DefaultSalesBillingUOMID:
					return defaultSalesBillingUOMID;
				case Field.LatestCountryOfOriginID:
					return latestCountryOfOriginID;
				case Field.Length:
					return length;
				case Field.Height:
					return height;
				case Field.Width:
					return width;
				case Field.GrossWeight:
					return grossWeight;
				case Field.GrossVolume:
					return grossVolume;
				case Field.LocationRestrictionID:
					return locationRestrictionID;
				case Field.IsKit:
					return isKit;
				case Field.IsPartRestrictedToSalesOrder:
					return isPartRestrictedToSalesOrder;
				case Field.HSCode:
					return hSCode;
				case Field.ExportHSCode:
					return exportHSCode;
				case Field.PartTypeID:
					return partTypeID;
				case Field.PackingGroupID:
					return packingGroupID;
				case Field.IsExpirySensitive:
					return isExpirySensitive;
				case Field.IsSerialNumberTracked:
					return isSerialNumberTracked;
				case Field.MinimumFreeShelfLife:
					return minimumFreeShelfLife;
				case Field.ShelfLifeUnit:
					return shelfLifeUnit;
				case Field.TPLBillingPartTariffID:
					return tPLBillingPartTariffID;
				case Field.PerTripMaximumQuantityInStorageUOM:
					return perTripMaximumQuantityInStorageUOM;
				case Field.BasePartID:
					return basePartID;
				case Field.MultiplicationFactor:
					return multiplicationFactor;
				case Field.TotalShelfLife:
					return totalShelfLife;
				case Field.TotalShelfLifeUnit:
					return totalShelfLifeUnit;
				case Field.IsTrackedByManufactureDate:
					return isTrackedByManufactureDate;
				case Field.ExternalPartReference:
					return externalPartReference;
				case Field.IsBarcodeLabelPrintRequired:
					return isBarcodeLabelPrintRequired;
				case Field.PartCategoryID:
					return partCategoryID;
				case Field.OriginType:
					return originType;
				case Field.IsUnderCycleCount:
					return isUnderCycleCount;
				case Field.IsComponentPart:
					return isComponentPart;
				case Field.PreferredMinimumAllocationQuantity:
					return preferredMinimumAllocationQuantity;
				case Field.PreferredMinimumPutawayQuantity:
					return preferredMinimumPutawayQuantity;
				case Field.IsBatchSensitive:
					return isBatchSensitive;
				case Field.NetWeight:
					return netWeight;
				case Field.InComplexityID:
					return inComplexityID;
				case Field.OutComplexityID:
					return outComplexityID;
				case Field.MHETypeID:
					return mHETypeID;
				case Field.NoOfComponents:
					return noOfComponents;
				case Field.IsWeightRequired:
					return isWeightRequired;
				case Field.SerialNoValidationRule:
					return serialNoValidationRule;
				case Field.LatestCountryOfOriginID_CountryCode:
					return latestCountryOfOriginID_CountryCode;
				case Field.LatestCountryOfOriginID_CountryName:
					return latestCountryOfOriginID_CountryName;
				case Field.LocationRestrictionID_LocationRestrictionCode:
					return locationRestrictionID_LocationRestrictionCode;
				case Field.LocationRestrictionID_LocationRestrictionName:
					return locationRestrictionID_LocationRestrictionName;
				case Field.MHETypeID_MHETypeCode:
					return mHETypeID_MHETypeCode;
				case Field.MHETypeID_MHETypeName:
					return mHETypeID_MHETypeName;
				case Field.MHETypeID_MHETypeID:
					return mHETypeID_MHETypeID;
				case Field.InComplexityID_OperationComplexityCode:
					return inComplexityID_OperationComplexityCode;
				case Field.InComplexityID_OperationComplexityID:
					return inComplexityID_OperationComplexityID;
				case Field.InComplexityID_OperationComplexityName:
					return inComplexityID_OperationComplexityName;
				case Field.InComplexityID_OperationTypeID:
					return inComplexityID_OperationTypeID;
				case Field.OutComplexityID_OperationComplexityCode:
					return outComplexityID_OperationComplexityCode;
				case Field.OutComplexityID_OperationComplexityID:
					return outComplexityID_OperationComplexityID;
				case Field.OutComplexityID_OperationComplexityName:
					return outComplexityID_OperationComplexityName;
				case Field.OutComplexityID_OperationTypeID:
					return outComplexityID_OperationTypeID;
				case Field.PackingGroupID_PackingGroupCode:
					return packingGroupID_PackingGroupCode;
				case Field.PackingGroupID_PackingGroupName:
					return packingGroupID_PackingGroupName;
				case Field.CreatedBy_PalmsUserLoginName:
					return createdBy_PalmsUserLoginName;
				case Field.ModifiedBy_PalmsUserLoginName:
					return modifiedBy_PalmsUserLoginName;
				case Field.BasePartID_PartCode:
					return basePartID_PartCode;
				case Field.PartCategoryID_PartCategoryCode:
					return partCategoryID_PartCategoryCode;
				case Field.PartCategoryID_PartCategoryName:
					return partCategoryID_PartCategoryName;
				case Field.PartTypeID_PartTypeCode:
					return partTypeID_PartTypeCode;
				case Field.PartTypeID_PartTypeName:
					return partTypeID_PartTypeName;
				case Field.PrimaryCompanyID_DocumentNoPrefix:
					return primaryCompanyID_DocumentNoPrefix;
				case Field.PrimaryCompanyID_PrimaryCompanyCode:
					return primaryCompanyID_PrimaryCompanyCode;
				case Field.PrimaryCompanyID_PrimaryCompanyName:
					return primaryCompanyID_PrimaryCompanyName;
				case Field.TPLBillingPartTariffID_TPLBillingPartTariffCode:
					return tPLBillingPartTariffID_TPLBillingPartTariffCode;
				case Field.TPLBillingPartTariffID_TPLBillingPartTariffName:
					return tPLBillingPartTariffID_TPLBillingPartTariffName;
				case Field.AdditionalStorageUOMID_UOMCode:
					return additionalStorageUOMID_UOMCode;
				case Field.AdditionalStorageUOMID_UOMName:
					return additionalStorageUOMID_UOMName;
				case Field.DefaultSalesBillingUOMID_UOMCode:
					return defaultSalesBillingUOMID_UOMCode;
				case Field.DefaultSalesBillingUOMID_UOMName:
					return defaultSalesBillingUOMID_UOMName;
				case Field.DefaultPurchaseUOMID_UOMCode:
					return defaultPurchaseUOMID_UOMCode;
				case Field.DefaultPurchaseUOMID_UOMName:
					return defaultPurchaseUOMID_UOMName;
				case Field.DefaultPurchaseBillingUOMID_UOMCode:
					return defaultPurchaseBillingUOMID_UOMCode;
				case Field.DefaultPurchaseBillingUOMID_UOMName:
					return defaultPurchaseBillingUOMID_UOMName;
				case Field.DefaultSalesUOMID_UOMCode:
					return defaultSalesUOMID_UOMCode;
				case Field.DefaultSalesUOMID_UOMName:
					return defaultSalesUOMID_UOMName;
				case Field.StorageUOMID_UOMCode:
					return storageUOMID_UOMCode;
				case Field.StorageUOMID_UOMName:
					return storageUOMID_UOMName;
			}

			return null;
		}

		public override string GetFieldName(int field)
		{
			return GetFieldName((Field)field);
		}

		public string GetFieldName(Field field)
		{
			return field.ToString();
		}

		public override Type GetType(int field)
		{
			return GetType((Field)field);
		}

		public Type GetType(Field field)
		{
			switch (field)
			{
				case Field.PrimaryCompanyID:
					return typeof(int?);
				case Field.PartID:
					return typeof(int?);
				case Field.PartName:
					return typeof(string);
				case Field.PartCode:
					return typeof(string);
				case Field.StorageUOMID:
					return typeof(int?);
				case Field.AdditionalStorageUOMID:
					return typeof(int?);
				case Field.DefaultPurchaseUOMID:
					return typeof(int?);
				case Field.DefaultPurchaseBillingUOMID:
					return typeof(int?);
				case Field.DefaultSalesUOMID:
					return typeof(int?);
				case Field.DefaultSalesBillingUOMID:
					return typeof(int?);
				case Field.LatestCountryOfOriginID:
					return typeof(int?);
				case Field.Length:
					return typeof(decimal?);
				case Field.Height:
					return typeof(decimal?);
				case Field.Width:
					return typeof(decimal?);
				case Field.GrossWeight:
					return typeof(decimal?);
				case Field.GrossVolume:
					return typeof(decimal?);
				case Field.LocationRestrictionID:
					return typeof(int?);
				case Field.IsKit:
					return typeof(bool?);
				case Field.IsPartRestrictedToSalesOrder:
					return typeof(bool?);
				case Field.HSCode:
					return typeof(string);
				case Field.ExportHSCode:
					return typeof(string);
				case Field.PartTypeID:
					return typeof(int?);
				case Field.PackingGroupID:
					return typeof(int?);
				case Field.IsExpirySensitive:
					return typeof(bool?);
				case Field.IsSerialNumberTracked:
					return typeof(bool?);
				case Field.MinimumFreeShelfLife:
					return typeof(int?);
				case Field.ShelfLifeUnit:
					return typeof(int?);
				case Field.TPLBillingPartTariffID:
					return typeof(int?);
				case Field.PerTripMaximumQuantityInStorageUOM:
					return typeof(decimal?);
				case Field.BasePartID:
					return typeof(int?);
				case Field.MultiplicationFactor:
					return typeof(decimal?);
				case Field.TotalShelfLife:
					return typeof(int?);
				case Field.TotalShelfLifeUnit:
					return typeof(int?);
				case Field.IsTrackedByManufactureDate:
					return typeof(bool?);
				case Field.ExternalPartReference:
					return typeof(string);
				case Field.IsBarcodeLabelPrintRequired:
					return typeof(bool?);
				case Field.PartCategoryID:
					return typeof(int?);
				case Field.OriginType:
					return typeof(string);
				case Field.IsUnderCycleCount:
					return typeof(bool?);
				case Field.IsComponentPart:
					return typeof(bool?);
				case Field.PreferredMinimumAllocationQuantity:
					return typeof(decimal?);
				case Field.PreferredMinimumPutawayQuantity:
					return typeof(decimal?);
				case Field.IsBatchSensitive:
					return typeof(bool?);
				case Field.NetWeight:
					return typeof(decimal?);
				case Field.InComplexityID:
					return typeof(int?);
				case Field.OutComplexityID:
					return typeof(int?);
				case Field.MHETypeID:
					return typeof(int?);
				case Field.NoOfComponents:
					return typeof(int?);
				case Field.IsWeightRequired:
					return typeof(bool?);
				case Field.SerialNoValidationRule:
					return typeof(int?);
				case Field.LatestCountryOfOriginID_CountryCode:
					return typeof(string);
				case Field.LatestCountryOfOriginID_CountryName:
					return typeof(string);
				case Field.LocationRestrictionID_LocationRestrictionCode:
					return typeof(string);
				case Field.LocationRestrictionID_LocationRestrictionName:
					return typeof(string);
				case Field.MHETypeID_MHETypeCode:
					return typeof(string);
				case Field.MHETypeID_MHETypeName:
					return typeof(string);
				case Field.MHETypeID_MHETypeID:
					return typeof(int?);
				case Field.InComplexityID_OperationComplexityCode:
					return typeof(string);
				case Field.InComplexityID_OperationComplexityID:
					return typeof(int?);
				case Field.InComplexityID_OperationComplexityName:
					return typeof(string);
				case Field.InComplexityID_OperationTypeID:
					return typeof(int?);
				case Field.OutComplexityID_OperationComplexityCode:
					return typeof(string);
				case Field.OutComplexityID_OperationComplexityID:
					return typeof(int?);
				case Field.OutComplexityID_OperationComplexityName:
					return typeof(string);
				case Field.OutComplexityID_OperationTypeID:
					return typeof(int?);
				case Field.PackingGroupID_PackingGroupCode:
					return typeof(string);
				case Field.PackingGroupID_PackingGroupName:
					return typeof(string);
				case Field.CreatedBy_PalmsUserLoginName:
					return typeof(string);
				case Field.ModifiedBy_PalmsUserLoginName:
					return typeof(string);
				case Field.BasePartID_PartCode:
					return typeof(string);
				case Field.PartCategoryID_PartCategoryCode:
					return typeof(string);
				case Field.PartCategoryID_PartCategoryName:
					return typeof(string);
				case Field.PartTypeID_PartTypeCode:
					return typeof(string);
				case Field.PartTypeID_PartTypeName:
					return typeof(string);
				case Field.PrimaryCompanyID_DocumentNoPrefix:
					return typeof(string);
				case Field.PrimaryCompanyID_PrimaryCompanyCode:
					return typeof(string);
				case Field.PrimaryCompanyID_PrimaryCompanyName:
					return typeof(string);
				case Field.TPLBillingPartTariffID_TPLBillingPartTariffCode:
					return typeof(string);
				case Field.TPLBillingPartTariffID_TPLBillingPartTariffName:
					return typeof(string);
				case Field.AdditionalStorageUOMID_UOMCode:
					return typeof(string);
				case Field.AdditionalStorageUOMID_UOMName:
					return typeof(string);
				case Field.DefaultSalesBillingUOMID_UOMCode:
					return typeof(string);
				case Field.DefaultSalesBillingUOMID_UOMName:
					return typeof(string);
				case Field.DefaultPurchaseUOMID_UOMCode:
					return typeof(string);
				case Field.DefaultPurchaseUOMID_UOMName:
					return typeof(string);
				case Field.DefaultPurchaseBillingUOMID_UOMCode:
					return typeof(string);
				case Field.DefaultPurchaseBillingUOMID_UOMName:
					return typeof(string);
				case Field.DefaultSalesUOMID_UOMCode:
					return typeof(string);
				case Field.DefaultSalesUOMID_UOMName:
					return typeof(string);
				case Field.StorageUOMID_UOMCode:
					return typeof(string);
				case Field.StorageUOMID_UOMName:
					return typeof(string);

			}
			return null;
		}

		public override void SetValue(int field, bool? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, bool? value)
		{
			switch (field)
			{
				case Field.IsKit:
					isKit = value;
					break;
				case Field.IsPartRestrictedToSalesOrder:
					isPartRestrictedToSalesOrder = value;
					break;
				case Field.IsExpirySensitive:
					isExpirySensitive = value;
					break;
				case Field.IsSerialNumberTracked:
					isSerialNumberTracked = value;
					break;
				case Field.IsTrackedByManufactureDate:
					isTrackedByManufactureDate = value;
					break;
				case Field.IsBarcodeLabelPrintRequired:
					isBarcodeLabelPrintRequired = value;
					break;
				case Field.IsUnderCycleCount:
					isUnderCycleCount = value;
					break;
				case Field.IsComponentPart:
					isComponentPart = value;
					break;
				case Field.IsBatchSensitive:
					isBatchSensitive = value;
					break;
				case Field.IsWeightRequired:
					isWeightRequired = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, long? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, long? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, int? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, int? value)
		{
			switch (field)
			{
				case Field.PrimaryCompanyID:
					primaryCompanyID = value;
					break;
				case Field.PartID:
					partID = value;
					break;
				case Field.StorageUOMID:
					storageUOMID = value;
					break;
				case Field.AdditionalStorageUOMID:
					additionalStorageUOMID = value;
					break;
				case Field.DefaultPurchaseUOMID:
					defaultPurchaseUOMID = value;
					break;
				case Field.DefaultPurchaseBillingUOMID:
					defaultPurchaseBillingUOMID = value;
					break;
				case Field.DefaultSalesUOMID:
					defaultSalesUOMID = value;
					break;
				case Field.DefaultSalesBillingUOMID:
					defaultSalesBillingUOMID = value;
					break;
				case Field.LatestCountryOfOriginID:
					latestCountryOfOriginID = value;
					break;
				case Field.LocationRestrictionID:
					locationRestrictionID = value;
					break;
				case Field.PartTypeID:
					partTypeID = value;
					break;
				case Field.PackingGroupID:
					packingGroupID = value;
					break;
				case Field.MinimumFreeShelfLife:
					minimumFreeShelfLife = value;
					break;
				case Field.ShelfLifeUnit:
					shelfLifeUnit = value;
					break;
				case Field.TPLBillingPartTariffID:
					tPLBillingPartTariffID = value;
					break;
				case Field.BasePartID:
					basePartID = value;
					break;
				case Field.TotalShelfLife:
					totalShelfLife = value;
					break;
				case Field.TotalShelfLifeUnit:
					totalShelfLifeUnit = value;
					break;
				case Field.PartCategoryID:
					partCategoryID = value;
					break;
				case Field.InComplexityID:
					inComplexityID = value;
					break;
				case Field.OutComplexityID:
					outComplexityID = value;
					break;
				case Field.MHETypeID:
					mHETypeID = value;
					break;
				case Field.NoOfComponents:
					noOfComponents = value;
					break;
				case Field.SerialNoValidationRule:
					serialNoValidationRule = value;
					break;
				case Field.MHETypeID_MHETypeID:
					mHETypeID_MHETypeID = value;
					break;
				case Field.InComplexityID_OperationComplexityID:
					inComplexityID_OperationComplexityID = value;
					break;
				case Field.InComplexityID_OperationTypeID:
					inComplexityID_OperationTypeID = value;
					break;
				case Field.OutComplexityID_OperationComplexityID:
					outComplexityID_OperationComplexityID = value;
					break;
				case Field.OutComplexityID_OperationTypeID:
					outComplexityID_OperationTypeID = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, short? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, short? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, byte? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, byte? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, BitArray value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, BitArray value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, float? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, float? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, double? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, double? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, decimal? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, decimal? value)
		{
			switch (field)
			{
				case Field.Length:
					length = value;
					break;
				case Field.Height:
					height = value;
					break;
				case Field.Width:
					width = value;
					break;
				case Field.GrossWeight:
					grossWeight = value;
					break;
				case Field.GrossVolume:
					grossVolume = value;
					break;
				case Field.PerTripMaximumQuantityInStorageUOM:
					perTripMaximumQuantityInStorageUOM = value;
					break;
				case Field.MultiplicationFactor:
					multiplicationFactor = value;
					break;
				case Field.PreferredMinimumAllocationQuantity:
					preferredMinimumAllocationQuantity = value;
					break;
				case Field.PreferredMinimumPutawayQuantity:
					preferredMinimumPutawayQuantity = value;
					break;
				case Field.NetWeight:
					netWeight = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, char? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, char? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, string value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, string value)
		{
			switch (field)
			{
				case Field.PartName:
					partName = value;
					break;
				case Field.PartCode:
					partCode = value;
					break;
				case Field.HSCode:
					hSCode = value;
					break;
				case Field.ExportHSCode:
					exportHSCode = value;
					break;
				case Field.ExternalPartReference:
					externalPartReference = value;
					break;
				case Field.OriginType:
					originType = value;
					break;
				case Field.LatestCountryOfOriginID_CountryCode:
					latestCountryOfOriginID_CountryCode = value;
					break;
				case Field.LatestCountryOfOriginID_CountryName:
					latestCountryOfOriginID_CountryName = value;
					break;
				case Field.LocationRestrictionID_LocationRestrictionCode:
					locationRestrictionID_LocationRestrictionCode = value;
					break;
				case Field.LocationRestrictionID_LocationRestrictionName:
					locationRestrictionID_LocationRestrictionName = value;
					break;
				case Field.MHETypeID_MHETypeCode:
					mHETypeID_MHETypeCode = value;
					break;
				case Field.MHETypeID_MHETypeName:
					mHETypeID_MHETypeName = value;
					break;
				case Field.InComplexityID_OperationComplexityCode:
					inComplexityID_OperationComplexityCode = value;
					break;
				case Field.InComplexityID_OperationComplexityName:
					inComplexityID_OperationComplexityName = value;
					break;
				case Field.OutComplexityID_OperationComplexityCode:
					outComplexityID_OperationComplexityCode = value;
					break;
				case Field.OutComplexityID_OperationComplexityName:
					outComplexityID_OperationComplexityName = value;
					break;
				case Field.PackingGroupID_PackingGroupCode:
					packingGroupID_PackingGroupCode = value;
					break;
				case Field.PackingGroupID_PackingGroupName:
					packingGroupID_PackingGroupName = value;
					break;
				case Field.CreatedBy_PalmsUserLoginName:
					createdBy_PalmsUserLoginName = value;
					break;
				case Field.ModifiedBy_PalmsUserLoginName:
					modifiedBy_PalmsUserLoginName = value;
					break;
				case Field.BasePartID_PartCode:
					basePartID_PartCode = value;
					break;
				case Field.PartCategoryID_PartCategoryCode:
					partCategoryID_PartCategoryCode = value;
					break;
				case Field.PartCategoryID_PartCategoryName:
					partCategoryID_PartCategoryName = value;
					break;
				case Field.PartTypeID_PartTypeCode:
					partTypeID_PartTypeCode = value;
					break;
				case Field.PartTypeID_PartTypeName:
					partTypeID_PartTypeName = value;
					break;
				case Field.PrimaryCompanyID_DocumentNoPrefix:
					primaryCompanyID_DocumentNoPrefix = value;
					break;
				case Field.PrimaryCompanyID_PrimaryCompanyCode:
					primaryCompanyID_PrimaryCompanyCode = value;
					break;
				case Field.PrimaryCompanyID_PrimaryCompanyName:
					primaryCompanyID_PrimaryCompanyName = value;
					break;
				case Field.TPLBillingPartTariffID_TPLBillingPartTariffCode:
					tPLBillingPartTariffID_TPLBillingPartTariffCode = value;
					break;
				case Field.TPLBillingPartTariffID_TPLBillingPartTariffName:
					tPLBillingPartTariffID_TPLBillingPartTariffName = value;
					break;
				case Field.AdditionalStorageUOMID_UOMCode:
					additionalStorageUOMID_UOMCode = value;
					break;
				case Field.AdditionalStorageUOMID_UOMName:
					additionalStorageUOMID_UOMName = value;
					break;
				case Field.DefaultSalesBillingUOMID_UOMCode:
					defaultSalesBillingUOMID_UOMCode = value;
					break;
				case Field.DefaultSalesBillingUOMID_UOMName:
					defaultSalesBillingUOMID_UOMName = value;
					break;
				case Field.DefaultPurchaseUOMID_UOMCode:
					defaultPurchaseUOMID_UOMCode = value;
					break;
				case Field.DefaultPurchaseUOMID_UOMName:
					defaultPurchaseUOMID_UOMName = value;
					break;
				case Field.DefaultPurchaseBillingUOMID_UOMCode:
					defaultPurchaseBillingUOMID_UOMCode = value;
					break;
				case Field.DefaultPurchaseBillingUOMID_UOMName:
					defaultPurchaseBillingUOMID_UOMName = value;
					break;
				case Field.DefaultSalesUOMID_UOMCode:
					defaultSalesUOMID_UOMCode = value;
					break;
				case Field.DefaultSalesUOMID_UOMName:
					defaultSalesUOMID_UOMName = value;
					break;
				case Field.StorageUOMID_UOMCode:
					storageUOMID_UOMCode = value;
					break;
				case Field.StorageUOMID_UOMName:
					storageUOMID_UOMName = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, DateTime? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, DateTime? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, Guid? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, Guid? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override bool IsIdentity(int field)
		{
			if ((Field)field == Field.PartID)
			{
				return true;
			}
			else
			{
				return false;
			}
		}

		#endregion Overriding / Public Members
	}
}
