//// Warning: Do not modify!
//// This file (QuickTransferFromHandheldLiftActionEntity.cs) has been auto-generated by PALMS Entity Generation Tool on 'Monday, October 23, 2017' at '1:07:19 PM'
//// If modification is required, consider 'partial class'.

using System;
using System.Collections;
using System.Collections.Generic;

#pragma warning disable 1591

namespace Technoforte.PALMS.Entities.Actions
{
	[Serializable]
	public partial class QuickTransferFromHandheldLiftActionEntity : Entity
	{
		#region Enums

		public new enum Field
		{
			WarehouseID
			, PrimaryCompanyID
			, ShippingInformationID
			, WarehousePrimaryCompanyID
			, CostBucketID
			, PartCostID
			, PartBatchID
			, FromLocationID
			, AvailableQuantityInStorageUOM
			, StockTransferQuantityInStorageUOM
			, LiftedQuantityInStorageUOM
			, TransactionTypeID
			, MoveableLocationID
			, ReferenceID
            , ReferenceLineNo
			, ActualBatchID
			, ActualSerialNo
			, ActualPartBatchNo
			, ActualExpiryDate
			, ActualManufacturingDate
			, StockBucketID
			
			, _FieldCount
		}

		#endregion Enums

		#region Members

		public int? warehouseID;
		public int? primaryCompanyID;
		public int? shippingInformationID;
		public int? warehousePrimaryCompanyID;
		public int? costBucketID;
		public int? partCostID;
		public int? partBatchID;
		public int? fromLocationID;
		public decimal? availableQuantityInStorageUOM;
		public decimal? stockTransferQuantityInStorageUOM;
		public decimal? liftedQuantityInStorageUOM;
		public int? transactionTypeID;
		public int? moveableLocationID;
		public int? referenceID;
        public int? referenceLineNo;
		public int? actualBatchID;
		public string actualSerialNo;
		public string actualPartBatchNo;
		public DateTime? actualExpiryDate;
		public DateTime? actualManufacturingDate;
		public int? stockBucketID;

		#endregion Members

		#region Overriding / Public Members


		public override int GetFieldCount()
		{
			return (int)Field._FieldCount;
		}

		public override object GetValue(int field)
		{
			return GetValue((Field)field);
		}

		public object GetValue(Field field)
		{
			switch (field)
			{
				case Field.WarehouseID:
					return warehouseID;
				case Field.PrimaryCompanyID:
					return primaryCompanyID;
				case Field.ShippingInformationID:
					return shippingInformationID;
				case Field.WarehousePrimaryCompanyID:
					return warehousePrimaryCompanyID;
				case Field.CostBucketID:
					return costBucketID;
				case Field.PartCostID:
					return partCostID;
				case Field.PartBatchID:
					return partBatchID;
				case Field.FromLocationID:
					return fromLocationID;
				case Field.AvailableQuantityInStorageUOM:
					return availableQuantityInStorageUOM;
				case Field.StockTransferQuantityInStorageUOM:
					return stockTransferQuantityInStorageUOM;
				case Field.LiftedQuantityInStorageUOM:
					return liftedQuantityInStorageUOM;
				case Field.TransactionTypeID:
					return transactionTypeID;
				case Field.MoveableLocationID:
					return moveableLocationID;
				case Field.ReferenceID:
					return referenceID;
                case Field.ReferenceLineNo:
                    return referenceLineNo;
				case Field.ActualBatchID:
					return actualBatchID;
				case Field.ActualSerialNo:
					return actualSerialNo;
				case Field.ActualPartBatchNo:
					return actualPartBatchNo;
				case Field.ActualExpiryDate:
					return actualExpiryDate;
				case Field.ActualManufacturingDate:
					return actualManufacturingDate;
				case Field.StockBucketID:
					return stockBucketID;
			}

			return null;
		}

		public override string GetFieldName(int field)
		{
			return GetFieldName((Field)field);
		}

		public string GetFieldName(Field field)
		{
			return field.ToString();
		}

		public override Type GetType(int field)
		{
			return GetType((Field)field);
		}

		public Type GetType(Field field)
		{
			switch (field)
			{
				case Field.WarehouseID:
					return typeof(int?);
				case Field.PrimaryCompanyID:
					return typeof(int?);
				case Field.ShippingInformationID:
					return typeof(int?);
				case Field.WarehousePrimaryCompanyID:
					return typeof(int?);
				case Field.CostBucketID:
					return typeof(int?);
				case Field.PartCostID:
					return typeof(int?);
				case Field.PartBatchID:
					return typeof(int?);
				case Field.FromLocationID:
					return typeof(int?);
				case Field.AvailableQuantityInStorageUOM:
					return typeof(decimal?);
				case Field.StockTransferQuantityInStorageUOM:
					return typeof(decimal?);
				case Field.LiftedQuantityInStorageUOM:
					return typeof(decimal?);
				case Field.TransactionTypeID:
					return typeof(int?);
				case Field.MoveableLocationID:
					return typeof(int?);
				case Field.ReferenceID:
					return typeof(int?);
                case Field.ReferenceLineNo:
                    return typeof(int?);
				case Field.ActualBatchID:
					return typeof(int?);
				case Field.ActualSerialNo:
					return typeof(string);
				case Field.ActualPartBatchNo:
					return typeof(string);
				case Field.ActualExpiryDate:
					return typeof(DateTime?);
				case Field.ActualManufacturingDate:
					return typeof(DateTime?);
				case Field.StockBucketID:
					return typeof(int?);

			}
			return null;
		}

		public override void SetValue(int field, bool? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, bool? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, long? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, long? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, int? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, int? value)
		{
			switch (field)
			{
				case Field.WarehouseID:
					warehouseID = value;
					break;
				case Field.PrimaryCompanyID:
					primaryCompanyID = value;
					break;
				case Field.ShippingInformationID:
					shippingInformationID = value;
					break;
				case Field.WarehousePrimaryCompanyID:
					warehousePrimaryCompanyID = value;
					break;
				case Field.CostBucketID:
					costBucketID = value;
					break;
				case Field.PartCostID:
					partCostID = value;
					break;
				case Field.PartBatchID:
					partBatchID = value;
					break;
				case Field.FromLocationID:
					fromLocationID = value;
					break;
				case Field.TransactionTypeID:
					transactionTypeID = value;
					break;
				case Field.MoveableLocationID:
					moveableLocationID = value;
					break;
				case Field.ReferenceID:
					referenceID = value;
					break;
                case Field.ReferenceLineNo:
                    referenceLineNo = value;
                    break;
				case Field.ActualBatchID:
					actualBatchID = value;
					break;
				case Field.StockBucketID:
					stockBucketID = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, short? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, short? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, byte? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, byte? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, BitArray value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, BitArray value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, float? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, float? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, double? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, double? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, decimal? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, decimal? value)
		{
			switch (field)
			{
				case Field.AvailableQuantityInStorageUOM:
					availableQuantityInStorageUOM = value;
					break;
				case Field.StockTransferQuantityInStorageUOM:
					stockTransferQuantityInStorageUOM = value;
					break;
				case Field.LiftedQuantityInStorageUOM:
					liftedQuantityInStorageUOM = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, char? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, char? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, string value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, string value)
		{
			switch (field)
			{
				case Field.ActualSerialNo:
					actualSerialNo = value;
					break;
				case Field.ActualPartBatchNo:
					actualPartBatchNo = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, DateTime? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, DateTime? value)
		{
			switch (field)
			{
				case Field.ActualExpiryDate:
					actualExpiryDate = value;
					break;
				case Field.ActualManufacturingDate:
					actualManufacturingDate = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, Guid? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, Guid? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override bool IsIdentity(int field)
		{
			return false;
		}

		#endregion Overriding / Public Members
	}
}
