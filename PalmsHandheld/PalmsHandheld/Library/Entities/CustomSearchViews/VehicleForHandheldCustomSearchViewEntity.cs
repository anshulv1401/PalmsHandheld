//// Warning: Do not modify!
//// This file (VehicleForHandheldCustomSearchViewEntity.cs) has been auto-generated by PALMS Entity Generation Tool on 'Thursday, February 1, 2018' at '10:56:25 AM'
//// If modification is required, consider 'partial class'.

using System;
using System.Collections;
using System.Collections.Generic;
using Technoforte.PALMS.Entities.CustomSearchViews.PrimaryKeys;
using Technoforte.PALMS.Entities.CustomSearchViews.UniqueKeys;

#pragma warning disable 1591

namespace Technoforte.PALMS.Entities.CustomSearchViews
{
	[Serializable]
	public partial class VehicleForHandheldCustomSearchViewEntity : Entity
	{
		#region Enums

		public new enum Field
		{
			VehicleID
			, VehicleNo
			, OriginalVehicleNo
			, VehicleTypeID
			, IsActive
			, VehicleStatusID
			, VehicleTypeID_VehicleTypeCode
			, VehicleTypeID_VehicleTypeName
			, VehicleTypeID_AllowMixedShippingInfoData
			, VehicleTypeID_IsTransportVehicle
			, VehicleStatusID_PalmsStatusCode
			, VehicleStatusID_PalmsStatusType
			, CreatedBy_PalmsUserLoginName
			, ModifiedBy_PalmsUserLoginName
			
			, _FieldCount
		}

		public enum UniqueKey
		{
			Default
		}

		#endregion Enums

		#region Members

		public int? vehicleID;
		public string vehicleNo;
		public string originalVehicleNo;
		public int? vehicleTypeID;
		public bool? isActive;
		public int? vehicleStatusID;
		public string vehicleTypeID_VehicleTypeCode;
		public string vehicleTypeID_VehicleTypeName;
		public bool? vehicleTypeID_AllowMixedShippingInfoData;
		public bool? vehicleTypeID_IsTransportVehicle;
		public string vehicleStatusID_PalmsStatusCode;
		public string vehicleStatusID_PalmsStatusType;
		public string createdBy_PalmsUserLoginName;
		public string modifiedBy_PalmsUserLoginName;

		#endregion Members

		#region Overriding / Public Members

		public override IEntityKey<Entity> GetPrimaryKey()
		{
			return (IEntityKey<Entity>) new VehicleForHandheldCustomSearchViewPrimaryKey()
			{
				vehicleNo = (string)vehicleNo
			};
		}

		public override IEntityKey<Entity> GetBlankPrimaryKey()
		{
			return (IEntityKey<Entity>)new VehicleForHandheldCustomSearchViewPrimaryKey();
		}

		public override IEntityKey<Entity> GetUniqueKey(string uniqueKey)
		{
			if (uniqueKey == "")
			{
				uniqueKey = "Default";
			}

			return (IEntityKey<Entity>)GetUniqueKey((UniqueKey)Enum.Parse(typeof(UniqueKey), uniqueKey, false));
		}

		public EntityKey<VehicleForHandheldCustomSearchViewEntity> GetUniqueKey(UniqueKey uniqueKey)
		{
			switch (uniqueKey)
			{
				case UniqueKey.Default:
					return new VehicleForHandheldCustomSearchViewUniqueKey()
					{
						vehicleNo = (string)vehicleNo
					};
			}

			return null;
		}

		public override IEntityKey<Entity> GetBlankUniqueKey(string uniqueKey)
		{
			if (uniqueKey == "")
			{
				uniqueKey = "Default";
			}

			return (IEntityKey<Entity>)GetBlankUniqueKey((UniqueKey)Enum.Parse(typeof(UniqueKey), uniqueKey, false));
		}

		public EntityKey<VehicleForHandheldCustomSearchViewEntity> GetBlankUniqueKey(UniqueKey uniqueKey)
		{
			switch (uniqueKey)
			{
				case UniqueKey.Default:
					return new VehicleForHandheldCustomSearchViewUniqueKey();
			}

			return null;
		}

		public override int GetFieldCount()
		{
			return (int)Field._FieldCount;
		}

		public override object GetValue(int field)
		{
			return GetValue((Field)field);
		}

		public object GetValue(Field field)
		{
			switch (field)
			{
				case Field.VehicleID:
					return vehicleID;
				case Field.VehicleNo:
					return vehicleNo;
				case Field.OriginalVehicleNo:
					return originalVehicleNo;
				case Field.VehicleTypeID:
					return vehicleTypeID;
				case Field.IsActive:
					return isActive;
				case Field.VehicleStatusID:
					return vehicleStatusID;
				case Field.VehicleTypeID_VehicleTypeCode:
					return vehicleTypeID_VehicleTypeCode;
				case Field.VehicleTypeID_VehicleTypeName:
					return vehicleTypeID_VehicleTypeName;
				case Field.VehicleTypeID_AllowMixedShippingInfoData:
					return vehicleTypeID_AllowMixedShippingInfoData;
				case Field.VehicleTypeID_IsTransportVehicle:
					return vehicleTypeID_IsTransportVehicle;
				case Field.VehicleStatusID_PalmsStatusCode:
					return vehicleStatusID_PalmsStatusCode;
				case Field.VehicleStatusID_PalmsStatusType:
					return vehicleStatusID_PalmsStatusType;
				case Field.CreatedBy_PalmsUserLoginName:
					return createdBy_PalmsUserLoginName;
				case Field.ModifiedBy_PalmsUserLoginName:
					return modifiedBy_PalmsUserLoginName;
			}

			return null;
		}

		public override string GetFieldName(int field)
		{
			return GetFieldName((Field)field);
		}

		public string GetFieldName(Field field)
		{
			return field.ToString();
		}

		public override Type GetType(int field)
		{
			return GetType((Field)field);
		}

		public Type GetType(Field field)
		{
			switch (field)
			{
				case Field.VehicleID:
					return typeof(int?);
				case Field.VehicleNo:
					return typeof(string);
				case Field.OriginalVehicleNo:
					return typeof(string);
				case Field.VehicleTypeID:
					return typeof(int?);
				case Field.IsActive:
					return typeof(bool?);
				case Field.VehicleStatusID:
					return typeof(int?);
				case Field.VehicleTypeID_VehicleTypeCode:
					return typeof(string);
				case Field.VehicleTypeID_VehicleTypeName:
					return typeof(string);
				case Field.VehicleTypeID_AllowMixedShippingInfoData:
					return typeof(bool?);
				case Field.VehicleTypeID_IsTransportVehicle:
					return typeof(bool?);
				case Field.VehicleStatusID_PalmsStatusCode:
					return typeof(string);
				case Field.VehicleStatusID_PalmsStatusType:
					return typeof(string);
				case Field.CreatedBy_PalmsUserLoginName:
					return typeof(string);
				case Field.ModifiedBy_PalmsUserLoginName:
					return typeof(string);

			}
			return null;
		}

		public override void SetValue(int field, bool? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, bool? value)
		{
			switch (field)
			{
				case Field.IsActive:
					isActive = value;
					break;
				case Field.VehicleTypeID_AllowMixedShippingInfoData:
					vehicleTypeID_AllowMixedShippingInfoData = value;
					break;
				case Field.VehicleTypeID_IsTransportVehicle:
					vehicleTypeID_IsTransportVehicle = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, long? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, long? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, int? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, int? value)
		{
			switch (field)
			{
				case Field.VehicleID:
					vehicleID = value;
					break;
				case Field.VehicleTypeID:
					vehicleTypeID = value;
					break;
				case Field.VehicleStatusID:
					vehicleStatusID = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, short? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, short? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, byte? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, byte? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, BitArray value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, BitArray value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, float? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, float? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, double? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, double? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, decimal? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, decimal? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, char? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, char? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, string value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, string value)
		{
			switch (field)
			{
				case Field.VehicleNo:
					vehicleNo = value;
					break;
				case Field.OriginalVehicleNo:
					originalVehicleNo = value;
					break;
				case Field.VehicleTypeID_VehicleTypeCode:
					vehicleTypeID_VehicleTypeCode = value;
					break;
				case Field.VehicleTypeID_VehicleTypeName:
					vehicleTypeID_VehicleTypeName = value;
					break;
				case Field.VehicleStatusID_PalmsStatusCode:
					vehicleStatusID_PalmsStatusCode = value;
					break;
				case Field.VehicleStatusID_PalmsStatusType:
					vehicleStatusID_PalmsStatusType = value;
					break;
				case Field.CreatedBy_PalmsUserLoginName:
					createdBy_PalmsUserLoginName = value;
					break;
				case Field.ModifiedBy_PalmsUserLoginName:
					modifiedBy_PalmsUserLoginName = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, DateTime? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, DateTime? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, Guid? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, Guid? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override bool IsIdentity(int field)
		{
			return false;
		}

		#endregion Overriding / Public Members
	}
}
