//// Warning: Do not modify!
//// This file (PackCreateActionEntity.cs) has been auto-generated by PALMS Entity Generation Tool on '29 November 2012' at '09:46:37'
//// If modification is required, consider 'partial class'.

using System;
using System.Collections;
using System.Collections.Generic;

#pragma warning disable 1591

namespace Technoforte.PALMS.Entities.Actions
{
	[Serializable]
	public partial class PackCreateActionEntity : Entity
	{
		#region Enums

		public new enum Field
		{
			WarehouseID
			, PrimaryCompanyID
			, CostBucketID
			, WarehousePrimaryCompanyID
			, OriginalPackNo
			, PackTypeID
			, OuterPackID
			, OuterMostPackID
			, PackOrigin
			, PackDestination
			, StandardPackID
			, Length
			, Width
			, Height
			, Weight
			, CaseMarkLabel
			, ShippingInformationID
			, HSCodes
			, SalesOrderNos
			, CountryOfOrigins
			, ReferenceNo
			, PackingMode
			
			, _FieldCount
		}

		#endregion Enums

		#region Members

		public int? warehouseID;
		public int? primaryCompanyID;
		public int? costBucketID;
		public int? warehousePrimaryCompanyID;
		public string originalPackNo;
		public int? packTypeID;
		public int? outerPackID;
		public int? outerMostPackID;
		public int? packOrigin;
		public int? packDestination;
		public int? standardPackID;
		public decimal? length;
		public decimal? width;
		public decimal? height;
		public decimal? weight;
		public string caseMarkLabel;
		public int? shippingInformationID;
		public string hSCodes;
		public string salesOrderNos;
		public string countryOfOrigins;
		public string referenceNo;
		public int? packingMode;

		#endregion Members

		#region Overriding / Public Members


		public override int GetFieldCount()
		{
			return (int)Field._FieldCount;
		}

		public override object GetValue(int field)
		{
			return GetValue((Field)field);
		}

		public object GetValue(Field field)
		{
			switch (field)
			{
				case Field.WarehouseID:
					return warehouseID;
				case Field.PrimaryCompanyID:
					return primaryCompanyID;
				case Field.CostBucketID:
					return costBucketID;
				case Field.WarehousePrimaryCompanyID:
					return warehousePrimaryCompanyID;
				case Field.OriginalPackNo:
					return originalPackNo;
				case Field.PackTypeID:
					return packTypeID;
				case Field.OuterPackID:
					return outerPackID;
				case Field.OuterMostPackID:
					return outerMostPackID;
				case Field.PackOrigin:
					return packOrigin;
				case Field.PackDestination:
					return packDestination;
				case Field.StandardPackID:
					return standardPackID;
				case Field.Length:
					return length;
				case Field.Width:
					return width;
				case Field.Height:
					return height;
				case Field.Weight:
					return weight;
				case Field.CaseMarkLabel:
					return caseMarkLabel;
				case Field.ShippingInformationID:
					return shippingInformationID;
				case Field.HSCodes:
					return hSCodes;
				case Field.SalesOrderNos:
					return salesOrderNos;
				case Field.CountryOfOrigins:
					return countryOfOrigins;
				case Field.ReferenceNo:
					return referenceNo;
				case Field.PackingMode:
					return packingMode;
			}

			return null;
		}

		public override string GetFieldName(int field)
		{
			return GetFieldName((Field)field);
		}

		public string GetFieldName(Field field)
		{
			return field.ToString();
		}

		public override Type GetType(int field)
		{
			return GetType((Field)field);
		}

		public Type GetType(Field field)
		{
			switch (field)
			{
				case Field.WarehouseID:
					return typeof(int?);
				case Field.PrimaryCompanyID:
					return typeof(int?);
				case Field.CostBucketID:
					return typeof(int?);
				case Field.WarehousePrimaryCompanyID:
					return typeof(int?);
				case Field.OriginalPackNo:
					return typeof(string);
				case Field.PackTypeID:
					return typeof(int?);
				case Field.OuterPackID:
					return typeof(int?);
				case Field.OuterMostPackID:
					return typeof(int?);
				case Field.PackOrigin:
					return typeof(int?);
				case Field.PackDestination:
					return typeof(int?);
				case Field.StandardPackID:
					return typeof(int?);
				case Field.Length:
					return typeof(decimal?);
				case Field.Width:
					return typeof(decimal?);
				case Field.Height:
					return typeof(decimal?);
				case Field.Weight:
					return typeof(decimal?);
				case Field.CaseMarkLabel:
					return typeof(string);
				case Field.ShippingInformationID:
					return typeof(int?);
				case Field.HSCodes:
					return typeof(string);
				case Field.SalesOrderNos:
					return typeof(string);
				case Field.CountryOfOrigins:
					return typeof(string);
				case Field.ReferenceNo:
					return typeof(string);
				case Field.PackingMode:
					return typeof(int?);

			}
			return null;
		}

		public override void SetValue(int field, bool? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, bool? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, long? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, long? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, int? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, int? value)
		{
			switch (field)
			{
				case Field.WarehouseID:
					warehouseID = value;
					break;
				case Field.PrimaryCompanyID:
					primaryCompanyID = value;
					break;
				case Field.CostBucketID:
					costBucketID = value;
					break;
				case Field.WarehousePrimaryCompanyID:
					warehousePrimaryCompanyID = value;
					break;
				case Field.PackTypeID:
					packTypeID = value;
					break;
				case Field.OuterPackID:
					outerPackID = value;
					break;
				case Field.OuterMostPackID:
					outerMostPackID = value;
					break;
				case Field.PackOrigin:
					packOrigin = value;
					break;
				case Field.PackDestination:
					packDestination = value;
					break;
				case Field.StandardPackID:
					standardPackID = value;
					break;
				case Field.ShippingInformationID:
					shippingInformationID = value;
					break;
				case Field.PackingMode:
					packingMode = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, short? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, short? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, byte? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, byte? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, BitArray value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, BitArray value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, float? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, float? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, double? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, double? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, decimal? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, decimal? value)
		{
			switch (field)
			{
				case Field.Length:
					length = value;
					break;
				case Field.Width:
					width = value;
					break;
				case Field.Height:
					height = value;
					break;
				case Field.Weight:
					weight = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, char? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, char? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, string value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, string value)
		{
			switch (field)
			{
				case Field.OriginalPackNo:
					originalPackNo = value;
					break;
				case Field.CaseMarkLabel:
					caseMarkLabel = value;
					break;
				case Field.HSCodes:
					hSCodes = value;
					break;
				case Field.SalesOrderNos:
					salesOrderNos = value;
					break;
				case Field.CountryOfOrigins:
					countryOfOrigins = value;
					break;
				case Field.ReferenceNo:
					referenceNo = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, DateTime? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, DateTime? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, Guid? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, Guid? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override bool IsIdentity(int field)
		{
			return false;
		}

		#endregion Overriding / Public Members
	}
}
