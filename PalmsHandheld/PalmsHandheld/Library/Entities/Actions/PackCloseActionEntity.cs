//// Warning: Do not modify!
//// This file (PackCloseActionEntity.cs) has been auto-generated by PALMS Entity Generation Tool on '08 January 2013' at '18:02:38'
//// If modification is required, consider 'partial class'.

using System;
using System.Collections;
using System.Collections.Generic;

#pragma warning disable 1591

namespace Technoforte.PALMS.Entities.Actions
{
	[Serializable]
	public partial class PackCloseActionEntity : Entity
	{
		#region Enums

		public new enum Field
		{
			CaseMarkLabel
			, CostBucketID
			, CountryOfOrigins
			, Height
			, HSCodes
			, IsActive
			, IsDispatch
			, IsReceiving
			, IsStorage
			, Length
			, OriginalPackNo
			, OuterMostPackID
			, OuterPackID
			, PackDestination
			, PackID
			, PackNo
			, PackOrigin
			, PackStatusID
			, PackTypeID
			, PackValue
			, PrimaryCompanyID
			, ReferenceNo
			, SalesOrderNos
			, ShippingInformationID
			, StandardPackID
			, WarehouseID
			, Weight
			, Width
			, OuterPackID_OriginalPackNo
			, OuterPackID_PackNo
			, OuterPackID_ReferenceNo
			, OuterMostPackID_OriginalPackNo
			, OuterMostPackID_PackNo
			, OuterMostPackID_ReferenceNo
			, PackTypeID_HierarchyLevel
			, PackTypeID_PackTypeCode
			, PackTypeID_PackTypeName
			, PackStatusID_PalmsStatusCode
			, PackStatusID_PalmsStatusName
			, StandardPackID_StandardPackCode
			, StandardPackID_StandardPackName
			, CustomerBillToID
			, CustomerShipToID
			, FreightForwarderID
			, FromPortID
			, ShippingModeID
			, ToPortID
			, TradeTermID
			, WarehousePrimaryCompanyID
			, SpecificAddressID
			, SpecificShipToCode
			, FinalDestinationCode
			, IsShippedSeparately
			, SpecificBillingAddressID
			, SpecificBillToCode
			, CustomerBillToID_CustomerBillToCode
			, CustomerShipToID_CustomerShipToCode
			, FreightForwarderID_FreightForwarderCode
			, FreightForwarderID_FreightForwarderName
			, FromPortID_PortCode
			, FromPortID_PortName
			, ToPortID_PortCode
			, ToPortID_PortName
			, ShippingModeID_ShippingModeCode
			, ShippingModeID_ShippingModeName
			, TradeTermID_TradeTermCode
			, TradeTermID_TradeTermName
			, PrimaryCompanyID_PrimaryCompanyName
			, CostBucketID_CostBucketName
			, WarehouseID_WarehouseName
			
			, _FieldCount
		}

		#endregion Enums

		#region Members

		public string caseMarkLabel;
		public int? costBucketID;
		public string countryOfOrigins;
		public decimal? height;
		public string hSCodes;
		public bool? isActive;
		public bool? isDispatch;
		public bool? isReceiving;
		public bool? isStorage;
		public decimal? length;
		public string originalPackNo;
		public int? outerMostPackID;
		public int? outerPackID;
		public int? packDestination;
		public int? packID;
		public string packNo;
		public int? packOrigin;
		public int? packStatusID;
		public int? packTypeID;
		public decimal? packValue;
		public int? primaryCompanyID;
		public string referenceNo;
		public string salesOrderNos;
		public int? shippingInformationID;
		public int? standardPackID;
		public int? warehouseID;
		public decimal? weight;
		public decimal? width;
		public string outerPackID_OriginalPackNo;
		public string outerPackID_PackNo;
		public string outerPackID_ReferenceNo;
		public string outerMostPackID_OriginalPackNo;
		public string outerMostPackID_PackNo;
		public string outerMostPackID_ReferenceNo;
		public int? packTypeID_HierarchyLevel;
		public string packTypeID_PackTypeCode;
		public string packTypeID_PackTypeName;
		public string packStatusID_PalmsStatusCode;
		public string packStatusID_PalmsStatusName;
		public string standardPackID_StandardPackCode;
		public string standardPackID_StandardPackName;
		public int? customerBillToID;
		public int? customerShipToID;
		public int? freightForwarderID;
		public int? fromPortID;
		public int? shippingModeID;
		public int? toPortID;
		public int? tradeTermID;
		public int? warehousePrimaryCompanyID;
		public int? specificAddressID;
		public string specificShipToCode;
		public string finalDestinationCode;
		public bool? isShippedSeparately;
		public int? specificBillingAddressID;
		public string specificBillToCode;
		public string customerBillToID_CustomerBillToCode;
		public string customerShipToID_CustomerShipToCode;
		public string freightForwarderID_FreightForwarderCode;
		public string freightForwarderID_FreightForwarderName;
		public string fromPortID_PortCode;
		public string fromPortID_PortName;
		public string toPortID_PortCode;
		public string toPortID_PortName;
		public string shippingModeID_ShippingModeCode;
		public string shippingModeID_ShippingModeName;
		public string tradeTermID_TradeTermCode;
		public string tradeTermID_TradeTermName;
		public string primaryCompanyID_PrimaryCompanyName;
		public string costBucketID_CostBucketName;
		public string warehouseID_WarehouseName;

		#endregion Members

		#region Overriding / Public Members


		public override int GetFieldCount()
		{
			return (int)Field._FieldCount;
		}

		public override object GetValue(int field)
		{
			return GetValue((Field)field);
		}

		public object GetValue(Field field)
		{
			switch (field)
			{
				case Field.CaseMarkLabel:
					return caseMarkLabel;
				case Field.CostBucketID:
					return costBucketID;
				case Field.CountryOfOrigins:
					return countryOfOrigins;
				case Field.Height:
					return height;
				case Field.HSCodes:
					return hSCodes;
				case Field.IsActive:
					return isActive;
				case Field.IsDispatch:
					return isDispatch;
				case Field.IsReceiving:
					return isReceiving;
				case Field.IsStorage:
					return isStorage;
				case Field.Length:
					return length;
				case Field.OriginalPackNo:
					return originalPackNo;
				case Field.OuterMostPackID:
					return outerMostPackID;
				case Field.OuterPackID:
					return outerPackID;
				case Field.PackDestination:
					return packDestination;
				case Field.PackID:
					return packID;
				case Field.PackNo:
					return packNo;
				case Field.PackOrigin:
					return packOrigin;
				case Field.PackStatusID:
					return packStatusID;
				case Field.PackTypeID:
					return packTypeID;
				case Field.PackValue:
					return packValue;
				case Field.PrimaryCompanyID:
					return primaryCompanyID;
				case Field.ReferenceNo:
					return referenceNo;
				case Field.SalesOrderNos:
					return salesOrderNos;
				case Field.ShippingInformationID:
					return shippingInformationID;
				case Field.StandardPackID:
					return standardPackID;
				case Field.WarehouseID:
					return warehouseID;
				case Field.Weight:
					return weight;
				case Field.Width:
					return width;
				case Field.OuterPackID_OriginalPackNo:
					return outerPackID_OriginalPackNo;
				case Field.OuterPackID_PackNo:
					return outerPackID_PackNo;
				case Field.OuterPackID_ReferenceNo:
					return outerPackID_ReferenceNo;
				case Field.OuterMostPackID_OriginalPackNo:
					return outerMostPackID_OriginalPackNo;
				case Field.OuterMostPackID_PackNo:
					return outerMostPackID_PackNo;
				case Field.OuterMostPackID_ReferenceNo:
					return outerMostPackID_ReferenceNo;
				case Field.PackTypeID_HierarchyLevel:
					return packTypeID_HierarchyLevel;
				case Field.PackTypeID_PackTypeCode:
					return packTypeID_PackTypeCode;
				case Field.PackTypeID_PackTypeName:
					return packTypeID_PackTypeName;
				case Field.PackStatusID_PalmsStatusCode:
					return packStatusID_PalmsStatusCode;
				case Field.PackStatusID_PalmsStatusName:
					return packStatusID_PalmsStatusName;
				case Field.StandardPackID_StandardPackCode:
					return standardPackID_StandardPackCode;
				case Field.StandardPackID_StandardPackName:
					return standardPackID_StandardPackName;
				case Field.CustomerBillToID:
					return customerBillToID;
				case Field.CustomerShipToID:
					return customerShipToID;
				case Field.FreightForwarderID:
					return freightForwarderID;
				case Field.FromPortID:
					return fromPortID;
				case Field.ShippingModeID:
					return shippingModeID;
				case Field.ToPortID:
					return toPortID;
				case Field.TradeTermID:
					return tradeTermID;
				case Field.WarehousePrimaryCompanyID:
					return warehousePrimaryCompanyID;
				case Field.SpecificAddressID:
					return specificAddressID;
				case Field.SpecificShipToCode:
					return specificShipToCode;
				case Field.FinalDestinationCode:
					return finalDestinationCode;
				case Field.IsShippedSeparately:
					return isShippedSeparately;
				case Field.SpecificBillingAddressID:
					return specificBillingAddressID;
				case Field.SpecificBillToCode:
					return specificBillToCode;
				case Field.CustomerBillToID_CustomerBillToCode:
					return customerBillToID_CustomerBillToCode;
				case Field.CustomerShipToID_CustomerShipToCode:
					return customerShipToID_CustomerShipToCode;
				case Field.FreightForwarderID_FreightForwarderCode:
					return freightForwarderID_FreightForwarderCode;
				case Field.FreightForwarderID_FreightForwarderName:
					return freightForwarderID_FreightForwarderName;
				case Field.FromPortID_PortCode:
					return fromPortID_PortCode;
				case Field.FromPortID_PortName:
					return fromPortID_PortName;
				case Field.ToPortID_PortCode:
					return toPortID_PortCode;
				case Field.ToPortID_PortName:
					return toPortID_PortName;
				case Field.ShippingModeID_ShippingModeCode:
					return shippingModeID_ShippingModeCode;
				case Field.ShippingModeID_ShippingModeName:
					return shippingModeID_ShippingModeName;
				case Field.TradeTermID_TradeTermCode:
					return tradeTermID_TradeTermCode;
				case Field.TradeTermID_TradeTermName:
					return tradeTermID_TradeTermName;
				case Field.PrimaryCompanyID_PrimaryCompanyName:
					return primaryCompanyID_PrimaryCompanyName;
				case Field.CostBucketID_CostBucketName:
					return costBucketID_CostBucketName;
				case Field.WarehouseID_WarehouseName:
					return warehouseID_WarehouseName;
			}

			return null;
		}

		public override string GetFieldName(int field)
		{
			return GetFieldName((Field)field);
		}

		public string GetFieldName(Field field)
		{
			return field.ToString();
		}

		public override Type GetType(int field)
		{
			return GetType((Field)field);
		}

		public Type GetType(Field field)
		{
			switch (field)
			{
				case Field.CaseMarkLabel:
					return typeof(string);
				case Field.CostBucketID:
					return typeof(int?);
				case Field.CountryOfOrigins:
					return typeof(string);
				case Field.Height:
					return typeof(decimal?);
				case Field.HSCodes:
					return typeof(string);
				case Field.IsActive:
					return typeof(bool?);
				case Field.IsDispatch:
					return typeof(bool?);
				case Field.IsReceiving:
					return typeof(bool?);
				case Field.IsStorage:
					return typeof(bool?);
				case Field.Length:
					return typeof(decimal?);
				case Field.OriginalPackNo:
					return typeof(string);
				case Field.OuterMostPackID:
					return typeof(int?);
				case Field.OuterPackID:
					return typeof(int?);
				case Field.PackDestination:
					return typeof(int?);
				case Field.PackID:
					return typeof(int?);
				case Field.PackNo:
					return typeof(string);
				case Field.PackOrigin:
					return typeof(int?);
				case Field.PackStatusID:
					return typeof(int?);
				case Field.PackTypeID:
					return typeof(int?);
				case Field.PackValue:
					return typeof(decimal?);
				case Field.PrimaryCompanyID:
					return typeof(int?);
				case Field.ReferenceNo:
					return typeof(string);
				case Field.SalesOrderNos:
					return typeof(string);
				case Field.ShippingInformationID:
					return typeof(int?);
				case Field.StandardPackID:
					return typeof(int?);
				case Field.WarehouseID:
					return typeof(int?);
				case Field.Weight:
					return typeof(decimal?);
				case Field.Width:
					return typeof(decimal?);
				case Field.OuterPackID_OriginalPackNo:
					return typeof(string);
				case Field.OuterPackID_PackNo:
					return typeof(string);
				case Field.OuterPackID_ReferenceNo:
					return typeof(string);
				case Field.OuterMostPackID_OriginalPackNo:
					return typeof(string);
				case Field.OuterMostPackID_PackNo:
					return typeof(string);
				case Field.OuterMostPackID_ReferenceNo:
					return typeof(string);
				case Field.PackTypeID_HierarchyLevel:
					return typeof(int?);
				case Field.PackTypeID_PackTypeCode:
					return typeof(string);
				case Field.PackTypeID_PackTypeName:
					return typeof(string);
				case Field.PackStatusID_PalmsStatusCode:
					return typeof(string);
				case Field.PackStatusID_PalmsStatusName:
					return typeof(string);
				case Field.StandardPackID_StandardPackCode:
					return typeof(string);
				case Field.StandardPackID_StandardPackName:
					return typeof(string);
				case Field.CustomerBillToID:
					return typeof(int?);
				case Field.CustomerShipToID:
					return typeof(int?);
				case Field.FreightForwarderID:
					return typeof(int?);
				case Field.FromPortID:
					return typeof(int?);
				case Field.ShippingModeID:
					return typeof(int?);
				case Field.ToPortID:
					return typeof(int?);
				case Field.TradeTermID:
					return typeof(int?);
				case Field.WarehousePrimaryCompanyID:
					return typeof(int?);
				case Field.SpecificAddressID:
					return typeof(int?);
				case Field.SpecificShipToCode:
					return typeof(string);
				case Field.FinalDestinationCode:
					return typeof(string);
				case Field.IsShippedSeparately:
					return typeof(bool?);
				case Field.SpecificBillingAddressID:
					return typeof(int?);
				case Field.SpecificBillToCode:
					return typeof(string);
				case Field.CustomerBillToID_CustomerBillToCode:
					return typeof(string);
				case Field.CustomerShipToID_CustomerShipToCode:
					return typeof(string);
				case Field.FreightForwarderID_FreightForwarderCode:
					return typeof(string);
				case Field.FreightForwarderID_FreightForwarderName:
					return typeof(string);
				case Field.FromPortID_PortCode:
					return typeof(string);
				case Field.FromPortID_PortName:
					return typeof(string);
				case Field.ToPortID_PortCode:
					return typeof(string);
				case Field.ToPortID_PortName:
					return typeof(string);
				case Field.ShippingModeID_ShippingModeCode:
					return typeof(string);
				case Field.ShippingModeID_ShippingModeName:
					return typeof(string);
				case Field.TradeTermID_TradeTermCode:
					return typeof(string);
				case Field.TradeTermID_TradeTermName:
					return typeof(string);
				case Field.PrimaryCompanyID_PrimaryCompanyName:
					return typeof(string);
				case Field.CostBucketID_CostBucketName:
					return typeof(string);
				case Field.WarehouseID_WarehouseName:
					return typeof(string);

			}
			return null;
		}

		public override void SetValue(int field, bool? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, bool? value)
		{
			switch (field)
			{
				case Field.IsActive:
					isActive = value;
					break;
				case Field.IsDispatch:
					isDispatch = value;
					break;
				case Field.IsReceiving:
					isReceiving = value;
					break;
				case Field.IsStorage:
					isStorage = value;
					break;
				case Field.IsShippedSeparately:
					isShippedSeparately = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, long? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, long? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, int? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, int? value)
		{
			switch (field)
			{
				case Field.CostBucketID:
					costBucketID = value;
					break;
				case Field.OuterMostPackID:
					outerMostPackID = value;
					break;
				case Field.OuterPackID:
					outerPackID = value;
					break;
				case Field.PackDestination:
					packDestination = value;
					break;
				case Field.PackID:
					packID = value;
					break;
				case Field.PackOrigin:
					packOrigin = value;
					break;
				case Field.PackStatusID:
					packStatusID = value;
					break;
				case Field.PackTypeID:
					packTypeID = value;
					break;
				case Field.PrimaryCompanyID:
					primaryCompanyID = value;
					break;
				case Field.ShippingInformationID:
					shippingInformationID = value;
					break;
				case Field.StandardPackID:
					standardPackID = value;
					break;
				case Field.WarehouseID:
					warehouseID = value;
					break;
				case Field.PackTypeID_HierarchyLevel:
					packTypeID_HierarchyLevel = value;
					break;
				case Field.CustomerBillToID:
					customerBillToID = value;
					break;
				case Field.CustomerShipToID:
					customerShipToID = value;
					break;
				case Field.FreightForwarderID:
					freightForwarderID = value;
					break;
				case Field.FromPortID:
					fromPortID = value;
					break;
				case Field.ShippingModeID:
					shippingModeID = value;
					break;
				case Field.ToPortID:
					toPortID = value;
					break;
				case Field.TradeTermID:
					tradeTermID = value;
					break;
				case Field.WarehousePrimaryCompanyID:
					warehousePrimaryCompanyID = value;
					break;
				case Field.SpecificAddressID:
					specificAddressID = value;
					break;
				case Field.SpecificBillingAddressID:
					specificBillingAddressID = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, short? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, short? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, byte? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, byte? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, BitArray value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, BitArray value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, float? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, float? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, double? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, double? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, decimal? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, decimal? value)
		{
			switch (field)
			{
				case Field.Height:
					height = value;
					break;
				case Field.Length:
					length = value;
					break;
				case Field.PackValue:
					packValue = value;
					break;
				case Field.Weight:
					weight = value;
					break;
				case Field.Width:
					width = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, char? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, char? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, string value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, string value)
		{
			switch (field)
			{
				case Field.CaseMarkLabel:
					caseMarkLabel = value;
					break;
				case Field.CountryOfOrigins:
					countryOfOrigins = value;
					break;
				case Field.HSCodes:
					hSCodes = value;
					break;
				case Field.OriginalPackNo:
					originalPackNo = value;
					break;
				case Field.PackNo:
					packNo = value;
					break;
				case Field.ReferenceNo:
					referenceNo = value;
					break;
				case Field.SalesOrderNos:
					salesOrderNos = value;
					break;
				case Field.OuterPackID_OriginalPackNo:
					outerPackID_OriginalPackNo = value;
					break;
				case Field.OuterPackID_PackNo:
					outerPackID_PackNo = value;
					break;
				case Field.OuterPackID_ReferenceNo:
					outerPackID_ReferenceNo = value;
					break;
				case Field.OuterMostPackID_OriginalPackNo:
					outerMostPackID_OriginalPackNo = value;
					break;
				case Field.OuterMostPackID_PackNo:
					outerMostPackID_PackNo = value;
					break;
				case Field.OuterMostPackID_ReferenceNo:
					outerMostPackID_ReferenceNo = value;
					break;
				case Field.PackTypeID_PackTypeCode:
					packTypeID_PackTypeCode = value;
					break;
				case Field.PackTypeID_PackTypeName:
					packTypeID_PackTypeName = value;
					break;
				case Field.PackStatusID_PalmsStatusCode:
					packStatusID_PalmsStatusCode = value;
					break;
				case Field.PackStatusID_PalmsStatusName:
					packStatusID_PalmsStatusName = value;
					break;
				case Field.StandardPackID_StandardPackCode:
					standardPackID_StandardPackCode = value;
					break;
				case Field.StandardPackID_StandardPackName:
					standardPackID_StandardPackName = value;
					break;
				case Field.SpecificShipToCode:
					specificShipToCode = value;
					break;
				case Field.FinalDestinationCode:
					finalDestinationCode = value;
					break;
				case Field.SpecificBillToCode:
					specificBillToCode = value;
					break;
				case Field.CustomerBillToID_CustomerBillToCode:
					customerBillToID_CustomerBillToCode = value;
					break;
				case Field.CustomerShipToID_CustomerShipToCode:
					customerShipToID_CustomerShipToCode = value;
					break;
				case Field.FreightForwarderID_FreightForwarderCode:
					freightForwarderID_FreightForwarderCode = value;
					break;
				case Field.FreightForwarderID_FreightForwarderName:
					freightForwarderID_FreightForwarderName = value;
					break;
				case Field.FromPortID_PortCode:
					fromPortID_PortCode = value;
					break;
				case Field.FromPortID_PortName:
					fromPortID_PortName = value;
					break;
				case Field.ToPortID_PortCode:
					toPortID_PortCode = value;
					break;
				case Field.ToPortID_PortName:
					toPortID_PortName = value;
					break;
				case Field.ShippingModeID_ShippingModeCode:
					shippingModeID_ShippingModeCode = value;
					break;
				case Field.ShippingModeID_ShippingModeName:
					shippingModeID_ShippingModeName = value;
					break;
				case Field.TradeTermID_TradeTermCode:
					tradeTermID_TradeTermCode = value;
					break;
				case Field.TradeTermID_TradeTermName:
					tradeTermID_TradeTermName = value;
					break;
				case Field.PrimaryCompanyID_PrimaryCompanyName:
					primaryCompanyID_PrimaryCompanyName = value;
					break;
				case Field.CostBucketID_CostBucketName:
					costBucketID_CostBucketName = value;
					break;
				case Field.WarehouseID_WarehouseName:
					warehouseID_WarehouseName = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, DateTime? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, DateTime? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, Guid? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, Guid? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override bool IsIdentity(int field)
		{
			return false;
		}

		#endregion Overriding / Public Members
	}
}
