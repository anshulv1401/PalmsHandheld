//// Warning: Do not modify!
//// This file (MiscellaneousReceiptFromHandheldCreateActionEntity.cs) has been auto-generated by PALMS Entity Generation Tool on '12 October 2018' at '14:18:26'
//// If modification is required, consider 'partial class'.

using System;
using System.Collections;
using System.Collections.Generic;

#pragma warning disable 1591

namespace Technoforte.PALMS.Entities.Actions
{
	[Serializable]
	public partial class MiscellaneousReceiptFromHandheldCreateActionEntity : Entity
	{
		#region Enums

		public new enum Field
		{
			WarehouseID
			, PrimaryCompanyID
			, CostBucketID
			, WarehousePrimaryCompanyID
			, ReceivedPartCostID
			, IsFOC
			, TotalOfLineAmountsInLocalCurrency
			, BillingUOMID
			, ReceivedQuantityInBillingUOM
			, UnitPriceOfBillingUOMInLocalCurrency
			, LineAmountInLocalCurrency
			, ToLocationID
			, ToLocationCode
			, PartBatchNo
			, ManufacturingDate
			, ExpiryPeriod
			, ExpiryPeriodUnit
			, ExpiryDate
			, SerialNo
			, PurchaseReferenceNo
			, CustomerID
			, IncomingWeight
			
			, _FieldCount
		}

		#endregion Enums

		#region Members

		public int? warehouseID;
		public int? primaryCompanyID;
		public int? costBucketID;
		public int? warehousePrimaryCompanyID;
		public int? receivedPartCostID;
		public bool? isFOC;
		public decimal? totalOfLineAmountsInLocalCurrency;
		public int? billingUOMID;
		public decimal? receivedQuantityInBillingUOM;
		public decimal? unitPriceOfBillingUOMInLocalCurrency;
		public decimal? lineAmountInLocalCurrency;
		public int? toLocationID;
		public string toLocationCode;
		public string partBatchNo;
		public DateTime? manufacturingDate;
		public int? expiryPeriod;
		public int? expiryPeriodUnit;
		public DateTime? expiryDate;
		public string serialNo;
		public string purchaseReferenceNo;
		public int? customerID;
		public decimal? incomingWeight;

		#endregion Members

		#region Overriding / Public Members


		public override int GetFieldCount()
		{
			return (int)Field._FieldCount;
		}

		public override object GetValue(int field)
		{
			return GetValue((Field)field);
		}

		public object GetValue(Field field)
		{
			switch (field)
			{
				case Field.WarehouseID:
					return warehouseID;
				case Field.PrimaryCompanyID:
					return primaryCompanyID;
				case Field.CostBucketID:
					return costBucketID;
				case Field.WarehousePrimaryCompanyID:
					return warehousePrimaryCompanyID;
				case Field.ReceivedPartCostID:
					return receivedPartCostID;
				case Field.IsFOC:
					return isFOC;
				case Field.TotalOfLineAmountsInLocalCurrency:
					return totalOfLineAmountsInLocalCurrency;
				case Field.BillingUOMID:
					return billingUOMID;
				case Field.ReceivedQuantityInBillingUOM:
					return receivedQuantityInBillingUOM;
				case Field.UnitPriceOfBillingUOMInLocalCurrency:
					return unitPriceOfBillingUOMInLocalCurrency;
				case Field.LineAmountInLocalCurrency:
					return lineAmountInLocalCurrency;
				case Field.ToLocationID:
					return toLocationID;
				case Field.ToLocationCode:
					return toLocationCode;
				case Field.PartBatchNo:
					return partBatchNo;
				case Field.ManufacturingDate:
					return manufacturingDate;
				case Field.ExpiryPeriod:
					return expiryPeriod;
				case Field.ExpiryPeriodUnit:
					return expiryPeriodUnit;
				case Field.ExpiryDate:
					return expiryDate;
				case Field.SerialNo:
					return serialNo;
				case Field.PurchaseReferenceNo:
					return purchaseReferenceNo;
				case Field.CustomerID:
					return customerID;
				case Field.IncomingWeight:
					return incomingWeight;
			}

			return null;
		}

		public override string GetFieldName(int field)
		{
			return GetFieldName((Field)field);
		}

		public string GetFieldName(Field field)
		{
			return field.ToString();
		}

		public override Type GetType(int field)
		{
			return GetType((Field)field);
		}

		public Type GetType(Field field)
		{
			switch (field)
			{
				case Field.WarehouseID:
					return typeof(int?);
				case Field.PrimaryCompanyID:
					return typeof(int?);
				case Field.CostBucketID:
					return typeof(int?);
				case Field.WarehousePrimaryCompanyID:
					return typeof(int?);
				case Field.ReceivedPartCostID:
					return typeof(int?);
				case Field.IsFOC:
					return typeof(bool?);
				case Field.TotalOfLineAmountsInLocalCurrency:
					return typeof(decimal?);
				case Field.BillingUOMID:
					return typeof(int?);
				case Field.ReceivedQuantityInBillingUOM:
					return typeof(decimal?);
				case Field.UnitPriceOfBillingUOMInLocalCurrency:
					return typeof(decimal?);
				case Field.LineAmountInLocalCurrency:
					return typeof(decimal?);
				case Field.ToLocationID:
					return typeof(int?);
				case Field.ToLocationCode:
					return typeof(string);
				case Field.PartBatchNo:
					return typeof(string);
				case Field.ManufacturingDate:
					return typeof(DateTime?);
				case Field.ExpiryPeriod:
					return typeof(int?);
				case Field.ExpiryPeriodUnit:
					return typeof(int?);
				case Field.ExpiryDate:
					return typeof(DateTime?);
				case Field.SerialNo:
					return typeof(string);
				case Field.PurchaseReferenceNo:
					return typeof(string);
				case Field.CustomerID:
					return typeof(int?);
				case Field.IncomingWeight:
					return typeof(decimal?);

			}
			return null;
		}

		public override void SetValue(int field, bool? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, bool? value)
		{
			switch (field)
			{
				case Field.IsFOC:
					isFOC = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, long? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, long? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, int? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, int? value)
		{
			switch (field)
			{
				case Field.WarehouseID:
					warehouseID = value;
					break;
				case Field.PrimaryCompanyID:
					primaryCompanyID = value;
					break;
				case Field.CostBucketID:
					costBucketID = value;
					break;
				case Field.WarehousePrimaryCompanyID:
					warehousePrimaryCompanyID = value;
					break;
				case Field.ReceivedPartCostID:
					receivedPartCostID = value;
					break;
				case Field.BillingUOMID:
					billingUOMID = value;
					break;
				case Field.ToLocationID:
					toLocationID = value;
					break;
				case Field.ExpiryPeriod:
					expiryPeriod = value;
					break;
				case Field.ExpiryPeriodUnit:
					expiryPeriodUnit = value;
					break;
				case Field.CustomerID:
					customerID = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, short? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, short? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, byte? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, byte? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, BitArray value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, BitArray value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, float? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, float? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, double? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, double? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, decimal? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, decimal? value)
		{
			switch (field)
			{
				case Field.TotalOfLineAmountsInLocalCurrency:
					totalOfLineAmountsInLocalCurrency = value;
					break;
				case Field.ReceivedQuantityInBillingUOM:
					receivedQuantityInBillingUOM = value;
					break;
				case Field.UnitPriceOfBillingUOMInLocalCurrency:
					unitPriceOfBillingUOMInLocalCurrency = value;
					break;
				case Field.LineAmountInLocalCurrency:
					lineAmountInLocalCurrency = value;
					break;
				case Field.IncomingWeight:
					incomingWeight = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, char? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, char? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, string value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, string value)
		{
			switch (field)
			{
				case Field.ToLocationCode:
					toLocationCode = value;
					break;
				case Field.PartBatchNo:
					partBatchNo = value;
					break;
				case Field.SerialNo:
					serialNo = value;
					break;
				case Field.PurchaseReferenceNo:
					purchaseReferenceNo = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, DateTime? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, DateTime? value)
		{
			switch (field)
			{
				case Field.ManufacturingDate:
					manufacturingDate = value;
					break;
				case Field.ExpiryDate:
					expiryDate = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, Guid? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, Guid? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override bool IsIdentity(int field)
		{
			return false;
		}

		#endregion Overriding / Public Members
	}
}
