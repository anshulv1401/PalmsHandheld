//// Warning: Do not modify!
//// This file (CustomerEntity.cs) has been auto-generated by PALMS Entity Generation Tool on 'Tuesday, March 21, 2017' at '4:24:09 PM'
//// If modification is required, consider 'partial class'.

using System;
using System.Collections;
using System.Collections.Generic;
using Technoforte.PALMS.Entities.Views.PrimaryKeys;
using Technoforte.PALMS.Entities.Views.UniqueKeys;

#pragma warning disable 1591

namespace Technoforte.PALMS.Entities.Views
{
	[Serializable]
	public partial class CustomerEntity : Entity
	{
		#region Enums

		public new enum Field
		{
			PrimaryCompanyID
			, CustomerID
			, CustomerName
			, CustomerCode
			, AddressID
			, CustomerTypeID
			, CustomerCurrencyID
			, DefaultWarehouseIDForAllocation
			, DaysToExpiry
			, DaysToExpiryUnit
			, MaximumAge
			, MaximumAgeUnit
			, Route
			, IsBackOrderMaintained
			, AddressID_CityID
			, AddressID_ContactName
			, AddressID_CountryID
			, AddressID_Line1
			, AddressID_Line2
			, AddressID_OtherCityName
			, AddressID_OtherStateName
			, AddressID_PostalCode
			, AddressID_PostBoxNumber
			, AddressID_StateID
			, CustomerCurrencyID_CurrencyCode
			, CustomerCurrencyID_CurrencyName
			, CustomerCurrencyID_CurrencySymbol
			, CustomerTypeID_CustomerTypeCode
			, CustomerTypeID_CustomerTypeName
			, CreatedBy_PalmsUserLoginName
			, ModifiedBy_PalmsUserLoginName
			, PrimaryCompanyID_DocumentNoPrefix
			, PrimaryCompanyID_PrimaryCompanyCode
			, PrimaryCompanyID_PrimaryCompanyName
			, DefaultWarehouseIDForAllocation_DocumentNoPrefix
			, DefaultWarehouseIDForAllocation_WarehouseCode
			, DefaultWarehouseIDForAllocation_WarehouseName
			, DefaultWarehouseIDForAllocation_WarehouseShipToCode
			, AddressID_CityID_CityCode
			, AddressID_CityID_CityName
			, AddressID_CityID_StateID
			, AddressID_CountryID_CountryCode
			, AddressID_CountryID_CountryName
			, AddressID_StateID_CountryID
			, AddressID_StateID_StateCode
			, AddressID_StateID_StateName
			, AddressID_CityID_StateID_CountryID
			, AddressID_CityID_StateID_StateCode
			, AddressID_CityID_StateID_StateName
			, AddressID_StateID_CountryID_CountryCode
			, AddressID_StateID_CountryID_CountryName
			, AddressID_CityID_StateID_CountryID_CountryCode
			, AddressID_CityID_StateID_CountryID_CountryName
			
			, _FieldCount
		}

		public enum UniqueKey
		{
			Code
		}

		#endregion Enums

		#region Members

		public int? primaryCompanyID;
		public int? customerID;
		public string customerName;
		public string customerCode;
		public int? addressID;
		public int? customerTypeID;
		public int? customerCurrencyID;
		public int? defaultWarehouseIDForAllocation;
		public int? daysToExpiry;
		public int? daysToExpiryUnit;
		public int? maximumAge;
		public int? maximumAgeUnit;
		public string route;
		public bool? isBackOrderMaintained;
		public int? addressID_CityID;
		public string addressID_ContactName;
		public int? addressID_CountryID;
		public string addressID_Line1;
		public string addressID_Line2;
		public string addressID_OtherCityName;
		public string addressID_OtherStateName;
		public string addressID_PostalCode;
		public string addressID_PostBoxNumber;
		public int? addressID_StateID;
		public string customerCurrencyID_CurrencyCode;
		public string customerCurrencyID_CurrencyName;
		public string customerCurrencyID_CurrencySymbol;
		public string customerTypeID_CustomerTypeCode;
		public string customerTypeID_CustomerTypeName;
		public string createdBy_PalmsUserLoginName;
		public string modifiedBy_PalmsUserLoginName;
		public string primaryCompanyID_DocumentNoPrefix;
		public string primaryCompanyID_PrimaryCompanyCode;
		public string primaryCompanyID_PrimaryCompanyName;
		public string defaultWarehouseIDForAllocation_DocumentNoPrefix;
		public string defaultWarehouseIDForAllocation_WarehouseCode;
		public string defaultWarehouseIDForAllocation_WarehouseName;
		public string defaultWarehouseIDForAllocation_WarehouseShipToCode;
		public string addressID_CityID_CityCode;
		public string addressID_CityID_CityName;
		public int? addressID_CityID_StateID;
		public string addressID_CountryID_CountryCode;
		public string addressID_CountryID_CountryName;
		public int? addressID_StateID_CountryID;
		public string addressID_StateID_StateCode;
		public string addressID_StateID_StateName;
		public int? addressID_CityID_StateID_CountryID;
		public string addressID_CityID_StateID_StateCode;
		public string addressID_CityID_StateID_StateName;
		public string addressID_StateID_CountryID_CountryCode;
		public string addressID_StateID_CountryID_CountryName;
		public string addressID_CityID_StateID_CountryID_CountryCode;
		public string addressID_CityID_StateID_CountryID_CountryName;

		#endregion Members

		#region Overriding / Public Members

		public override IEntityKey<Entity> GetPrimaryKey()
		{
			return (IEntityKey<Entity>)new CustomerPrimaryKey()
			{
				customerID = (int)customerID
				, primaryCompanyID = (int)primaryCompanyID
			};
		}

		public override IEntityKey<Entity> GetBlankPrimaryKey()
		{
			return (IEntityKey<Entity>)new CustomerPrimaryKey();
		}

		public override IEntityKey<Entity> GetUniqueKey(string uniqueKey)
		{
			if (uniqueKey == "")
			{
				uniqueKey = "Code";
			}

			return (IEntityKey<Entity>)GetUniqueKey((UniqueKey)Enum.Parse(typeof(UniqueKey), uniqueKey, false));
		}

		public EntityKey<CustomerEntity> GetUniqueKey(UniqueKey uniqueKey)
		{
			switch (uniqueKey)
			{
				case UniqueKey.Code:
					return new CustomerUniqueKey_Code()
					{
						customerCode = (string)customerCode
						, primaryCompanyID = (int?)primaryCompanyID
					};
			}

			return null;
		}

		public override IEntityKey<Entity> GetBlankUniqueKey(string uniqueKey)
		{
			if (uniqueKey == "")
			{
				uniqueKey = "Code";
			}

			return (IEntityKey<Entity>)GetBlankUniqueKey((UniqueKey)Enum.Parse(typeof(UniqueKey), uniqueKey, false));
		}

		public EntityKey<CustomerEntity> GetBlankUniqueKey(UniqueKey uniqueKey)
		{
			switch (uniqueKey)
			{
				case UniqueKey.Code:
					return new CustomerUniqueKey_Code();
			}

			return null;
		}

		public override int GetFieldCount()
		{
			return (int)Field._FieldCount;
		}

		public override object GetValue(int field)
		{
			return GetValue((Field)field);
		}

		public object GetValue(Field field)
		{
			switch (field)
			{
				case Field.PrimaryCompanyID:
					return primaryCompanyID;
				case Field.CustomerID:
					return customerID;
				case Field.CustomerName:
					return customerName;
				case Field.CustomerCode:
					return customerCode;
				case Field.AddressID:
					return addressID;
				case Field.CustomerTypeID:
					return customerTypeID;
				case Field.CustomerCurrencyID:
					return customerCurrencyID;
				case Field.DefaultWarehouseIDForAllocation:
					return defaultWarehouseIDForAllocation;
				case Field.DaysToExpiry:
					return daysToExpiry;
				case Field.DaysToExpiryUnit:
					return daysToExpiryUnit;
				case Field.MaximumAge:
					return maximumAge;
				case Field.MaximumAgeUnit:
					return maximumAgeUnit;
				case Field.Route:
					return route;
				case Field.IsBackOrderMaintained:
					return isBackOrderMaintained;
				case Field.AddressID_CityID:
					return addressID_CityID;
				case Field.AddressID_ContactName:
					return addressID_ContactName;
				case Field.AddressID_CountryID:
					return addressID_CountryID;
				case Field.AddressID_Line1:
					return addressID_Line1;
				case Field.AddressID_Line2:
					return addressID_Line2;
				case Field.AddressID_OtherCityName:
					return addressID_OtherCityName;
				case Field.AddressID_OtherStateName:
					return addressID_OtherStateName;
				case Field.AddressID_PostalCode:
					return addressID_PostalCode;
				case Field.AddressID_PostBoxNumber:
					return addressID_PostBoxNumber;
				case Field.AddressID_StateID:
					return addressID_StateID;
				case Field.CustomerCurrencyID_CurrencyCode:
					return customerCurrencyID_CurrencyCode;
				case Field.CustomerCurrencyID_CurrencyName:
					return customerCurrencyID_CurrencyName;
				case Field.CustomerCurrencyID_CurrencySymbol:
					return customerCurrencyID_CurrencySymbol;
				case Field.CustomerTypeID_CustomerTypeCode:
					return customerTypeID_CustomerTypeCode;
				case Field.CustomerTypeID_CustomerTypeName:
					return customerTypeID_CustomerTypeName;
				case Field.CreatedBy_PalmsUserLoginName:
					return createdBy_PalmsUserLoginName;
				case Field.ModifiedBy_PalmsUserLoginName:
					return modifiedBy_PalmsUserLoginName;
				case Field.PrimaryCompanyID_DocumentNoPrefix:
					return primaryCompanyID_DocumentNoPrefix;
				case Field.PrimaryCompanyID_PrimaryCompanyCode:
					return primaryCompanyID_PrimaryCompanyCode;
				case Field.PrimaryCompanyID_PrimaryCompanyName:
					return primaryCompanyID_PrimaryCompanyName;
				case Field.DefaultWarehouseIDForAllocation_DocumentNoPrefix:
					return defaultWarehouseIDForAllocation_DocumentNoPrefix;
				case Field.DefaultWarehouseIDForAllocation_WarehouseCode:
					return defaultWarehouseIDForAllocation_WarehouseCode;
				case Field.DefaultWarehouseIDForAllocation_WarehouseName:
					return defaultWarehouseIDForAllocation_WarehouseName;
				case Field.DefaultWarehouseIDForAllocation_WarehouseShipToCode:
					return defaultWarehouseIDForAllocation_WarehouseShipToCode;
				case Field.AddressID_CityID_CityCode:
					return addressID_CityID_CityCode;
				case Field.AddressID_CityID_CityName:
					return addressID_CityID_CityName;
				case Field.AddressID_CityID_StateID:
					return addressID_CityID_StateID;
				case Field.AddressID_CountryID_CountryCode:
					return addressID_CountryID_CountryCode;
				case Field.AddressID_CountryID_CountryName:
					return addressID_CountryID_CountryName;
				case Field.AddressID_StateID_CountryID:
					return addressID_StateID_CountryID;
				case Field.AddressID_StateID_StateCode:
					return addressID_StateID_StateCode;
				case Field.AddressID_StateID_StateName:
					return addressID_StateID_StateName;
				case Field.AddressID_CityID_StateID_CountryID:
					return addressID_CityID_StateID_CountryID;
				case Field.AddressID_CityID_StateID_StateCode:
					return addressID_CityID_StateID_StateCode;
				case Field.AddressID_CityID_StateID_StateName:
					return addressID_CityID_StateID_StateName;
				case Field.AddressID_StateID_CountryID_CountryCode:
					return addressID_StateID_CountryID_CountryCode;
				case Field.AddressID_StateID_CountryID_CountryName:
					return addressID_StateID_CountryID_CountryName;
				case Field.AddressID_CityID_StateID_CountryID_CountryCode:
					return addressID_CityID_StateID_CountryID_CountryCode;
				case Field.AddressID_CityID_StateID_CountryID_CountryName:
					return addressID_CityID_StateID_CountryID_CountryName;
			}

			return null;
		}

		public override string GetFieldName(int field)
		{
			return GetFieldName((Field)field);
		}

		public string GetFieldName(Field field)
		{
			return field.ToString();
		}

		public override Type GetType(int field)
		{
			return GetType((Field)field);
		}

		public Type GetType(Field field)
		{
			switch (field)
			{
				case Field.PrimaryCompanyID:
					return typeof(int?);
				case Field.CustomerID:
					return typeof(int?);
				case Field.CustomerName:
					return typeof(string);
				case Field.CustomerCode:
					return typeof(string);
				case Field.AddressID:
					return typeof(int?);
				case Field.CustomerTypeID:
					return typeof(int?);
				case Field.CustomerCurrencyID:
					return typeof(int?);
				case Field.DefaultWarehouseIDForAllocation:
					return typeof(int?);
				case Field.DaysToExpiry:
					return typeof(int?);
				case Field.DaysToExpiryUnit:
					return typeof(int?);
				case Field.MaximumAge:
					return typeof(int?);
				case Field.MaximumAgeUnit:
					return typeof(int?);
				case Field.Route:
					return typeof(string);
				case Field.IsBackOrderMaintained:
					return typeof(bool?);
				case Field.AddressID_CityID:
					return typeof(int?);
				case Field.AddressID_ContactName:
					return typeof(string);
				case Field.AddressID_CountryID:
					return typeof(int?);
				case Field.AddressID_Line1:
					return typeof(string);
				case Field.AddressID_Line2:
					return typeof(string);
				case Field.AddressID_OtherCityName:
					return typeof(string);
				case Field.AddressID_OtherStateName:
					return typeof(string);
				case Field.AddressID_PostalCode:
					return typeof(string);
				case Field.AddressID_PostBoxNumber:
					return typeof(string);
				case Field.AddressID_StateID:
					return typeof(int?);
				case Field.CustomerCurrencyID_CurrencyCode:
					return typeof(string);
				case Field.CustomerCurrencyID_CurrencyName:
					return typeof(string);
				case Field.CustomerCurrencyID_CurrencySymbol:
					return typeof(string);
				case Field.CustomerTypeID_CustomerTypeCode:
					return typeof(string);
				case Field.CustomerTypeID_CustomerTypeName:
					return typeof(string);
				case Field.CreatedBy_PalmsUserLoginName:
					return typeof(string);
				case Field.ModifiedBy_PalmsUserLoginName:
					return typeof(string);
				case Field.PrimaryCompanyID_DocumentNoPrefix:
					return typeof(string);
				case Field.PrimaryCompanyID_PrimaryCompanyCode:
					return typeof(string);
				case Field.PrimaryCompanyID_PrimaryCompanyName:
					return typeof(string);
				case Field.DefaultWarehouseIDForAllocation_DocumentNoPrefix:
					return typeof(string);
				case Field.DefaultWarehouseIDForAllocation_WarehouseCode:
					return typeof(string);
				case Field.DefaultWarehouseIDForAllocation_WarehouseName:
					return typeof(string);
				case Field.DefaultWarehouseIDForAllocation_WarehouseShipToCode:
					return typeof(string);
				case Field.AddressID_CityID_CityCode:
					return typeof(string);
				case Field.AddressID_CityID_CityName:
					return typeof(string);
				case Field.AddressID_CityID_StateID:
					return typeof(int?);
				case Field.AddressID_CountryID_CountryCode:
					return typeof(string);
				case Field.AddressID_CountryID_CountryName:
					return typeof(string);
				case Field.AddressID_StateID_CountryID:
					return typeof(int?);
				case Field.AddressID_StateID_StateCode:
					return typeof(string);
				case Field.AddressID_StateID_StateName:
					return typeof(string);
				case Field.AddressID_CityID_StateID_CountryID:
					return typeof(int?);
				case Field.AddressID_CityID_StateID_StateCode:
					return typeof(string);
				case Field.AddressID_CityID_StateID_StateName:
					return typeof(string);
				case Field.AddressID_StateID_CountryID_CountryCode:
					return typeof(string);
				case Field.AddressID_StateID_CountryID_CountryName:
					return typeof(string);
				case Field.AddressID_CityID_StateID_CountryID_CountryCode:
					return typeof(string);
				case Field.AddressID_CityID_StateID_CountryID_CountryName:
					return typeof(string);

			}
			return null;
		}

		public override void SetValue(int field, bool? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, bool? value)
		{
			switch (field)
			{
				case Field.IsBackOrderMaintained:
					isBackOrderMaintained = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, long? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, long? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, int? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, int? value)
		{
			switch (field)
			{
				case Field.PrimaryCompanyID:
					primaryCompanyID = value;
					break;
				case Field.CustomerID:
					customerID = value;
					break;
				case Field.AddressID:
					addressID = value;
					break;
				case Field.CustomerTypeID:
					customerTypeID = value;
					break;
				case Field.CustomerCurrencyID:
					customerCurrencyID = value;
					break;
				case Field.DefaultWarehouseIDForAllocation:
					defaultWarehouseIDForAllocation = value;
					break;
				case Field.DaysToExpiry:
					daysToExpiry = value;
					break;
				case Field.DaysToExpiryUnit:
					daysToExpiryUnit = value;
					break;
				case Field.MaximumAge:
					maximumAge = value;
					break;
				case Field.MaximumAgeUnit:
					maximumAgeUnit = value;
					break;
				case Field.AddressID_CityID:
					addressID_CityID = value;
					break;
				case Field.AddressID_CountryID:
					addressID_CountryID = value;
					break;
				case Field.AddressID_StateID:
					addressID_StateID = value;
					break;
				case Field.AddressID_CityID_StateID:
					addressID_CityID_StateID = value;
					break;
				case Field.AddressID_StateID_CountryID:
					addressID_StateID_CountryID = value;
					break;
				case Field.AddressID_CityID_StateID_CountryID:
					addressID_CityID_StateID_CountryID = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, short? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, short? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, byte? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, byte? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, BitArray value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, BitArray value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, float? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, float? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, double? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, double? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, decimal? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, decimal? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, char? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, char? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, string value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, string value)
		{
			switch (field)
			{
				case Field.CustomerName:
					customerName = value;
					break;
				case Field.CustomerCode:
					customerCode = value;
					break;
				case Field.Route:
					route = value;
					break;
				case Field.AddressID_ContactName:
					addressID_ContactName = value;
					break;
				case Field.AddressID_Line1:
					addressID_Line1 = value;
					break;
				case Field.AddressID_Line2:
					addressID_Line2 = value;
					break;
				case Field.AddressID_OtherCityName:
					addressID_OtherCityName = value;
					break;
				case Field.AddressID_OtherStateName:
					addressID_OtherStateName = value;
					break;
				case Field.AddressID_PostalCode:
					addressID_PostalCode = value;
					break;
				case Field.AddressID_PostBoxNumber:
					addressID_PostBoxNumber = value;
					break;
				case Field.CustomerCurrencyID_CurrencyCode:
					customerCurrencyID_CurrencyCode = value;
					break;
				case Field.CustomerCurrencyID_CurrencyName:
					customerCurrencyID_CurrencyName = value;
					break;
				case Field.CustomerCurrencyID_CurrencySymbol:
					customerCurrencyID_CurrencySymbol = value;
					break;
				case Field.CustomerTypeID_CustomerTypeCode:
					customerTypeID_CustomerTypeCode = value;
					break;
				case Field.CustomerTypeID_CustomerTypeName:
					customerTypeID_CustomerTypeName = value;
					break;
				case Field.CreatedBy_PalmsUserLoginName:
					createdBy_PalmsUserLoginName = value;
					break;
				case Field.ModifiedBy_PalmsUserLoginName:
					modifiedBy_PalmsUserLoginName = value;
					break;
				case Field.PrimaryCompanyID_DocumentNoPrefix:
					primaryCompanyID_DocumentNoPrefix = value;
					break;
				case Field.PrimaryCompanyID_PrimaryCompanyCode:
					primaryCompanyID_PrimaryCompanyCode = value;
					break;
				case Field.PrimaryCompanyID_PrimaryCompanyName:
					primaryCompanyID_PrimaryCompanyName = value;
					break;
				case Field.DefaultWarehouseIDForAllocation_DocumentNoPrefix:
					defaultWarehouseIDForAllocation_DocumentNoPrefix = value;
					break;
				case Field.DefaultWarehouseIDForAllocation_WarehouseCode:
					defaultWarehouseIDForAllocation_WarehouseCode = value;
					break;
				case Field.DefaultWarehouseIDForAllocation_WarehouseName:
					defaultWarehouseIDForAllocation_WarehouseName = value;
					break;
				case Field.DefaultWarehouseIDForAllocation_WarehouseShipToCode:
					defaultWarehouseIDForAllocation_WarehouseShipToCode = value;
					break;
				case Field.AddressID_CityID_CityCode:
					addressID_CityID_CityCode = value;
					break;
				case Field.AddressID_CityID_CityName:
					addressID_CityID_CityName = value;
					break;
				case Field.AddressID_CountryID_CountryCode:
					addressID_CountryID_CountryCode = value;
					break;
				case Field.AddressID_CountryID_CountryName:
					addressID_CountryID_CountryName = value;
					break;
				case Field.AddressID_StateID_StateCode:
					addressID_StateID_StateCode = value;
					break;
				case Field.AddressID_StateID_StateName:
					addressID_StateID_StateName = value;
					break;
				case Field.AddressID_CityID_StateID_StateCode:
					addressID_CityID_StateID_StateCode = value;
					break;
				case Field.AddressID_CityID_StateID_StateName:
					addressID_CityID_StateID_StateName = value;
					break;
				case Field.AddressID_StateID_CountryID_CountryCode:
					addressID_StateID_CountryID_CountryCode = value;
					break;
				case Field.AddressID_StateID_CountryID_CountryName:
					addressID_StateID_CountryID_CountryName = value;
					break;
				case Field.AddressID_CityID_StateID_CountryID_CountryCode:
					addressID_CityID_StateID_CountryID_CountryCode = value;
					break;
				case Field.AddressID_CityID_StateID_CountryID_CountryName:
					addressID_CityID_StateID_CountryID_CountryName = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, DateTime? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, DateTime? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, Guid? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, Guid? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override bool IsIdentity(int field)
		{
			if ((Field)field == Field.CustomerID)
			{
				return true;
			}
			else
			{
				return false;
			}
		}

		#endregion Overriding / Public Members
	}
}
