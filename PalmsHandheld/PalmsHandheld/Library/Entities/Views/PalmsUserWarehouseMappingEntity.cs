//// Warning: Do not modify!
//// This file (PalmsUserWarehouseMappingEntity.cs) has been auto-generated by PALMS Entity Generation Tool on '02 January 2012' at '18:27:31'
//// If modification is required, consider 'partial class'.

using System;
using System.Collections;
using System.Collections.Generic;
using Technoforte.PALMS.Entities.Views.PrimaryKeys;
using Technoforte.PALMS.Entities.Views.UniqueKeys;

#pragma warning disable 1591

namespace Technoforte.PALMS.Entities.Views
{
	[Serializable]
	public partial class PalmsUserWarehouseMappingEntity : Entity
	{
		#region Enums

		public new enum Field
		{
			PalmsUserID
			, WarehouseID
			, CreatedBy_PalmsUserLoginName
			, ModifiedBy_PalmsUserLoginName
			, PalmsUserID_PalmsUserLoginName
			, WarehouseID_WarehouseCode
			, WarehouseID_WarehouseName
			, WarehouseID_WarehouseShipToCode
			
			, _FieldCount
		}

		public enum UniqueKey
		{
			Default
		}

		#endregion Enums

		#region Members

		public int? palmsUserID;
		public int? warehouseID;
		public string createdBy_PalmsUserLoginName;
		public string modifiedBy_PalmsUserLoginName;
		public string palmsUserID_PalmsUserLoginName;
		public string warehouseID_WarehouseCode;
		public string warehouseID_WarehouseName;
		public string warehouseID_WarehouseShipToCode;

		#endregion Members

		#region Overriding / Public Members

		public override IEntityKey<Entity> GetPrimaryKey()
		{
			return (IEntityKey<Entity>) new PalmsUserWarehouseMappingPrimaryKey()
			{
				palmsUserID = (int)palmsUserID
				, warehouseID = (int)warehouseID
			};
		}

		public override IEntityKey<Entity> GetBlankPrimaryKey()
		{
			return (IEntityKey<Entity>) new PalmsUserWarehouseMappingPrimaryKey();
		}

		public override IEntityKey<Entity> GetUniqueKey(string uniqueKey)
		{
            if (uniqueKey == "" && uniqueKey == "Default")
            {
                uniqueKey = "Default";
            }

            return (IEntityKey<Entity>) new PalmsUserWarehouseMappingUniqueKey()
					{
							palmsUserID = (int?)palmsUserID
						, warehouseID = (int?)warehouseID
					};		
		}	

		public override IEntityKey<Entity> GetBlankUniqueKey(string uniqueKey)
		{
			if (uniqueKey == "" && uniqueKey == "Default")
			{
                return (IEntityKey<Entity>)new PalmsUserWarehouseMappingUniqueKey();
			}
            return null;
		}

		public EntityKey<PalmsUserWarehouseMappingEntity> GetBlankUniqueKey(UniqueKey uniqueKey)
		{
			switch (uniqueKey)
			{
				case UniqueKey.Default:
					return new PalmsUserWarehouseMappingUniqueKey();
			}

			return null;
		}

		public override int GetFieldCount()
		{
			return (int)Field._FieldCount;
		}

		public override object GetValue(int field)
		{
			return GetValue((Field)field);
		}

		public object GetValue(Field field)
		{
			switch (field)
			{
				case Field.PalmsUserID:
					return palmsUserID;
				case Field.WarehouseID:
					return warehouseID;
				case Field.CreatedBy_PalmsUserLoginName:
					return createdBy_PalmsUserLoginName;
				case Field.ModifiedBy_PalmsUserLoginName:
					return modifiedBy_PalmsUserLoginName;
				case Field.PalmsUserID_PalmsUserLoginName:
					return palmsUserID_PalmsUserLoginName;
				case Field.WarehouseID_WarehouseCode:
					return warehouseID_WarehouseCode;
				case Field.WarehouseID_WarehouseName:
					return warehouseID_WarehouseName;
				case Field.WarehouseID_WarehouseShipToCode:
					return warehouseID_WarehouseShipToCode;
			}

			return null;
		}

		public override string GetFieldName(int field)
		{
			return GetFieldName((Field)field);
		}

		public string GetFieldName(Field field)
		{
			return field.ToString();
		}

		public override Type GetType(int field)
		{
			return GetType((Field)field);
		}

		public Type GetType(Field field)
		{
			switch (field)
			{
				case Field.PalmsUserID:
					return typeof(int?);
				case Field.WarehouseID:
					return typeof(int?);
				case Field.CreatedBy_PalmsUserLoginName:
					return typeof(string);
				case Field.ModifiedBy_PalmsUserLoginName:
					return typeof(string);
				case Field.PalmsUserID_PalmsUserLoginName:
					return typeof(string);
				case Field.WarehouseID_WarehouseCode:
					return typeof(string);
				case Field.WarehouseID_WarehouseName:
					return typeof(string);
				case Field.WarehouseID_WarehouseShipToCode:
					return typeof(string);

			}
			return null;
		}

		public override void SetValue(int field, bool? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, bool? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, long? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, long? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, int? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, int? value)
		{
			switch (field)
			{
				case Field.PalmsUserID:
					palmsUserID = value;
					break;
				case Field.WarehouseID:
					warehouseID = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, short? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, short? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, byte? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, byte? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, BitArray value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, BitArray value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, float? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, float? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, double? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, double? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, decimal? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, decimal? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, char? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, char? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, string value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, string value)
		{
			switch (field)
			{
				case Field.CreatedBy_PalmsUserLoginName:
					createdBy_PalmsUserLoginName = value;
					break;
				case Field.ModifiedBy_PalmsUserLoginName:
					modifiedBy_PalmsUserLoginName = value;
					break;
				case Field.PalmsUserID_PalmsUserLoginName:
					palmsUserID_PalmsUserLoginName = value;
					break;
				case Field.WarehouseID_WarehouseCode:
					warehouseID_WarehouseCode = value;
					break;
				case Field.WarehouseID_WarehouseName:
					warehouseID_WarehouseName = value;
					break;
				case Field.WarehouseID_WarehouseShipToCode:
					warehouseID_WarehouseShipToCode = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, DateTime? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, DateTime? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, Guid? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, Guid? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override bool IsIdentity(int field)
		{
			return false;
		}

		#endregion Overriding / Public Members
	}
}
