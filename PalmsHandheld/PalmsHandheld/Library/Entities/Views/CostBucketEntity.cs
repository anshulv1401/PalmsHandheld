//// Warning: Do not modify!
//// This file (CostBucketEntity.cs) has been auto-generated by PALMS Entity Generation Tool on '12 January 2012' at '16:39:34'
//// If modification is required, consider 'partial class'.

using System;
using System.Collections;
using System.Collections.Generic;
using Technoforte.PALMS.Entities.Views.PrimaryKeys;
using Technoforte.PALMS.Entities.Views.UniqueKeys;

#pragma warning disable 1591

namespace Technoforte.PALMS.Entities.Views
{
	[Serializable]
	public partial class CostBucketEntity : Entity
	{
		#region Enums

		public new enum Field
		{
			CostBucketCode
			, CostBucketID
			, CostBucketName
			, CostingMethod
			, CreatedBy_PalmsUserLoginName
			, ModifiedBy_PalmsUserLoginName
			
			, _FieldCount
		}

		public enum UniqueKey
		{
			Code
			, Name
		}

		#endregion Enums

		#region Members

		public string costBucketCode;
		public int? costBucketID;
		public string costBucketName;
		public int? costingMethod;
		public string createdBy_PalmsUserLoginName;
		public string modifiedBy_PalmsUserLoginName;

		#endregion Members

		#region Overriding / Public Members

		public override IEntityKey<Entity> GetPrimaryKey()
		{
			return (IEntityKey<Entity>) new CostBucketPrimaryKey()
			{
				costBucketID = (int)costBucketID
			};
		}

		public override IEntityKey<Entity> GetBlankPrimaryKey()
		{
			return (IEntityKey<Entity>) new CostBucketPrimaryKey();
		}

		public override IEntityKey<Entity> GetUniqueKey(string uniqueKey)
		{
			if (uniqueKey == "" && uniqueKey == "Default")
			{
				uniqueKey = "Default";
			}

            return (IEntityKey<Entity>) new CostBucketUniqueKey_Code()
					{
						costBucketCode = (string) costBucketCode
					};		
		}

		public EntityKey<CostBucketEntity> GetUniqueKey(UniqueKey uniqueKey)
		{
			switch (uniqueKey)
			{
				case UniqueKey.Code:
					return new CostBucketUniqueKey_Code()
					{
						costBucketCode = (string)costBucketCode
					};
				case UniqueKey.Name:
					return new CostBucketUniqueKey_Name()
					{
						costBucketName = (string)costBucketName
					};
			}

			return null;
		}

		public EntityKey<CostBucketEntity> GetBlankUniqueKey(UniqueKey uniqueKey)
		{
			switch (uniqueKey)
			{
				case UniqueKey.Code:
					return new CostBucketUniqueKey_Code();
				case UniqueKey.Name:
					return new CostBucketUniqueKey_Name();
			}

			return null;
		}

		public override int GetFieldCount()
		{
			return (int)Field._FieldCount;
		}

		public override object GetValue(int field)
		{
			return GetValue((Field)field);
		}

		public object GetValue(Field field)
		{
			switch (field)
			{
				case Field.CostBucketCode:
					return costBucketCode;
				case Field.CostBucketID:
					return costBucketID;
				case Field.CostBucketName:
					return costBucketName;
				case Field.CostingMethod:
					return costingMethod;
				case Field.CreatedBy_PalmsUserLoginName:
					return createdBy_PalmsUserLoginName;
				case Field.ModifiedBy_PalmsUserLoginName:
					return modifiedBy_PalmsUserLoginName;
			}

			return null;
		}

		public override string GetFieldName(int field)
		{
			return GetFieldName((Field)field);
		}

		public string GetFieldName(Field field)
		{
			return field.ToString();
		}

		public override Type GetType(int field)
		{
			return GetType((Field)field);
		}

		public Type GetType(Field field)
		{
			switch (field)
			{
				case Field.CostBucketCode:
					return typeof(string);
				case Field.CostBucketID:
					return typeof(int?);
				case Field.CostBucketName:
					return typeof(string);
				case Field.CostingMethod:
					return typeof(int?);
				case Field.CreatedBy_PalmsUserLoginName:
					return typeof(string);
				case Field.ModifiedBy_PalmsUserLoginName:
					return typeof(string);

			}
			return null;
		}

		public override void SetValue(int field, bool? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, bool? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, long? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, long? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, int? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, int? value)
		{
			switch (field)
			{
				case Field.CostBucketID:
					costBucketID = value;
					break;
				case Field.CostingMethod:
					costingMethod = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, short? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, short? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, byte? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, byte? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, BitArray value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, BitArray value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, float? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, float? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, double? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, double? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, decimal? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, decimal? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, char? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, char? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, string value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, string value)
		{
			switch (field)
			{
				case Field.CostBucketCode:
					costBucketCode = value;
					break;
				case Field.CostBucketName:
					costBucketName = value;
					break;
				case Field.CreatedBy_PalmsUserLoginName:
					createdBy_PalmsUserLoginName = value;
					break;
				case Field.ModifiedBy_PalmsUserLoginName:
					modifiedBy_PalmsUserLoginName = value;
					break;
				default:
					break;
			}
		}

		public override void SetValue(int field, DateTime? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, DateTime? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override void SetValue(int field, Guid? value)
		{
			SetValue((Field)field, value);
		}

		public void SetValue(Field field, Guid? value)
		{
			switch (field)
			{
				default:
					break;
			}
		}

		public override bool IsIdentity(int field)
		{
			if ((Field)field == Field.CostBucketID)
			{
				return true;
			}
			else
			{
				return false;
			}
		}

		#endregion Overriding / Public Members
	}
}
